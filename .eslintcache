[{"F:\\react\\ts-react\\src\\App.tsx":"1","F:\\react\\ts-react\\src\\index.tsx":"2","F:\\react\\ts-react\\src\\components\\hello.tsx":"3","F:\\react\\ts-react\\src\\components\\like.tsx":"4","F:\\react\\ts-react\\src\\components\\loaddata.tsx":"5","F:\\react\\ts-react\\src\\hooks\\useGetData.tsx":"6","F:\\react\\ts-react\\src\\reportWebVitals.ts":"7","F:\\react\\ts-react\\src\\components\\Button\\button.tsx":"8","F:\\react\\ts-react\\src\\components\\Icon\\index.tsx":"9","F:\\react\\ts-react\\src\\site\\layout\\content\\Document.tsx":"10","F:\\react\\ts-react\\src\\site\\layout\\index.tsx":"11","F:\\react\\ts-react\\src\\site\\layout\\content\\content.tsx":"12","F:\\react\\ts-react\\src\\site\\layout\\content\\Brief.tsx":"13","F:\\react\\ts-react\\src\\site\\layout\\content\\Params.tsx":"14","F:\\react\\ts-react\\src\\site\\layout\\header.tsx":"15","F:\\react\\ts-react\\src\\site\\layout\\leftNav.tsx":"16","F:\\react\\ts-react\\src\\site\\layout\\footer.tsx":"17","F:\\react\\ts-react\\src\\site\\layout\\content\\demo\\CodePreview.tsx":"18","F:\\react\\ts-react\\src\\site\\pages\\Button.tsx":"19","F:\\react\\ts-react\\src\\site\\pages\\Index.tsx":"20","F:\\react\\ts-react\\src\\router\\index.js":"21","F:\\react\\ts-react\\src\\store\\index.js":"22","F:\\react\\ts-react\\src\\store\\route.js":"23","F:\\react\\ts-react\\src\\store\\screenWidth.js":"24","F:\\react\\ts-react\\src\\site\\layout\\hooks\\useScreenWidth.tsx":"25","F:\\react\\ts-react\\src\\components\\Table\\index.tsx":"26","F:\\react\\ts-react\\src\\site\\pages\\Select.tsx":"27","F:\\react\\ts-react\\src\\components\\Select\\index.tsx":"28","F:\\react\\ts-react\\src\\site\\pages\\Input.tsx":"29","F:\\react\\ts-react\\src\\components\\Input\\index.tsx":"30","F:\\react\\ts-react\\src\\site\\pages\\Icon.tsx":"31","F:\\react\\ts-react\\src\\site\\pages\\Grid.tsx":"32","F:\\react\\ts-react\\src\\components\\Grid\\index.tsx":"33","F:\\react\\ts-react\\src\\components\\Grid\\hook.tsx":"34","F:\\react\\ts-react\\src\\components\\Divider\\index.tsx":"35","F:\\react\\ts-react\\src\\site\\pages\\Divider.tsx":"36","F:\\react\\ts-react\\src\\site\\pages\\Checkbox.tsx":"37","F:\\react\\ts-react\\src\\site\\pages\\Radio.tsx":"38","F:\\react\\ts-react\\src\\components\\Checkbox\\index.tsx":"39","F:\\react\\ts-react\\src\\site\\pages\\Table.tsx":"40","F:\\react\\ts-react2\\src\\index.tsx":"41","F:\\react\\ts-react2\\src\\reportWebVitals.ts":"42","F:\\react\\ts-react2\\src\\App.tsx":"43","F:\\react\\ts-react2\\src\\router\\index.js":"44","F:\\react\\ts-react2\\src\\store\\index.js":"45","F:\\react\\ts-react2\\src\\store\\route.js":"46","F:\\react\\ts-react2\\src\\store\\screenWidth.js":"47","F:\\react\\ts-react2\\src\\site\\pages\\Index.tsx":"48","F:\\react\\ts-react2\\src\\site\\pages\\Button.tsx":"49","F:\\react\\ts-react2\\src\\site\\pages\\Select.tsx":"50","F:\\react\\ts-react2\\src\\site\\pages\\Input.tsx":"51","F:\\react\\ts-react2\\src\\site\\pages\\Grid.tsx":"52","F:\\react\\ts-react2\\src\\site\\pages\\Icon.tsx":"53","F:\\react\\ts-react2\\src\\site\\pages\\Divider.tsx":"54","F:\\react\\ts-react2\\src\\site\\pages\\Checkbox.tsx":"55","F:\\react\\ts-react2\\src\\site\\pages\\Radio.tsx":"56","F:\\react\\ts-react2\\src\\site\\pages\\Table.tsx":"57","F:\\react\\ts-react2\\src\\site\\layout\\index.tsx":"58","F:\\react\\ts-react2\\src\\components\\Button\\button.tsx":"59","F:\\react\\ts-react2\\src\\site\\layout\\header.tsx":"60","F:\\react\\ts-react2\\src\\site\\layout\\footer.tsx":"61","F:\\react\\ts-react2\\src\\site\\layout\\hooks\\useScreenWidth.tsx":"62","F:\\react\\ts-react2\\src\\components\\Icon\\index.tsx":"63","F:\\react\\ts-react2\\src\\components\\Table\\index.tsx":"64","F:\\react\\ts-react2\\src\\components\\Select\\index.tsx":"65","F:\\react\\ts-react2\\src\\components\\Divider\\index.tsx":"66","F:\\react\\ts-react2\\src\\components\\Grid\\index.tsx":"67","F:\\react\\ts-react2\\src\\components\\Input\\index.tsx":"68","F:\\react\\ts-react2\\src\\components\\Checkbox\\index.tsx":"69","F:\\react\\ts-react2\\src\\components\\Grid\\hook.tsx":"70","F:\\react\\ts-react2\\src\\site\\layout\\SiderBar.tsx":"71","F:\\react\\ts-react2\\src\\site\\components\\content\\index.tsx":"72","F:\\react\\ts-react2\\src\\site\\components\\content\\Brief.tsx":"73","F:\\react\\ts-react2\\src\\site\\components\\content\\demoList.tsx":"74","F:\\react\\ts-react2\\src\\site\\components\\content\\Params.tsx":"75","F:\\react\\ts-react2\\src\\site\\components\\content\\demo\\index.tsx":"76","F:\\react\\ts-react2\\src\\site\\components\\content\\demo\\Code.tsx":"77","F:\\react\\ts-react2\\src\\site\\components\\content\\demo\\Introduce.tsx":"78","F:\\react\\ts-react2\\src\\site\\components\\content\\demo\\Preview.tsx":"79","F:\\react\\ts-react2\\src\\site\\layout\\CSST.tsx":"80"},{"size":683,"mtime":1609397055244,"results":"81","hashOfConfig":"82"},{"size":780,"mtime":1609396630565,"results":"83","hashOfConfig":"82"},{"size":237,"mtime":1608714763623,"results":"84","hashOfConfig":"85"},{"size":539,"mtime":1609396835325,"results":"86","hashOfConfig":"82"},{"size":787,"mtime":1608885364827,"results":"87","hashOfConfig":"82"},{"size":441,"mtime":1608801627119,"results":"88","hashOfConfig":"82"},{"size":425,"mtime":1608710713517,"results":"89","hashOfConfig":"82"},{"size":1807,"mtime":1609730486829,"results":"90","hashOfConfig":"82"},{"size":973,"mtime":1610965962356,"results":"91","hashOfConfig":"82"},{"size":488,"mtime":1611110889131,"results":"92","hashOfConfig":"82"},{"size":2330,"mtime":1611915433189,"results":"93","hashOfConfig":"82"},{"size":2986,"mtime":1610961900875,"results":"94","hashOfConfig":"82"},{"size":302,"mtime":1611047264307,"results":"95","hashOfConfig":"82"},{"size":270,"mtime":1611110900626,"results":"96","hashOfConfig":"82"},{"size":836,"mtime":1609741792792,"results":"97","hashOfConfig":"82"},{"size":3861,"mtime":1611914328015,"results":"98","hashOfConfig":"82"},{"size":227,"mtime":1611222471686,"results":"99","hashOfConfig":"82"},{"size":1714,"mtime":1610959229414,"results":"100","hashOfConfig":"82"},{"size":10972,"mtime":1611222746387,"results":"101","hashOfConfig":"82"},{"size":187,"mtime":1609393347784,"results":"102","hashOfConfig":"82"},{"size":1687,"mtime":1611218299717,"results":"103","hashOfConfig":"82"},{"size":207,"mtime":1609404664239,"results":"104","hashOfConfig":"82"},{"size":302,"mtime":1609404563961,"results":"105","hashOfConfig":"82"},{"size":252,"mtime":1609409607386,"results":"106","hashOfConfig":"82"},{"size":457,"mtime":1609407449165,"results":"107","hashOfConfig":"82"},{"size":1258,"mtime":1611111122253,"results":"108","hashOfConfig":"82"},{"size":4770,"mtime":1611047460243,"results":"109","hashOfConfig":"82"},{"size":7938,"mtime":1610693946838,"results":"110","hashOfConfig":"82"},{"size":8237,"mtime":1611047454875,"results":"111","hashOfConfig":"82"},{"size":6553,"mtime":1610693999161,"results":"112","hashOfConfig":"82"},{"size":29587,"mtime":1611047469578,"results":"113","hashOfConfig":"82"},{"size":22883,"mtime":1611218881807,"results":"114","hashOfConfig":"82"},{"size":3205,"mtime":1611109887978,"results":"115","hashOfConfig":"82"},{"size":3949,"mtime":1611050431227,"results":"116","hashOfConfig":"82"},{"size":827,"mtime":1611052617428,"results":"117","hashOfConfig":"82"},{"size":5968,"mtime":1611053041644,"results":"118","hashOfConfig":"82"},{"size":9832,"mtime":1611218838793,"results":"119","hashOfConfig":"82"},{"size":4768,"mtime":1611123827454,"results":"120","hashOfConfig":"82"},{"size":4704,"mtime":1611210896330,"results":"121","hashOfConfig":"82"},{"size":4189,"mtime":1611218602238,"results":"122","hashOfConfig":"82"},{"size":780,"mtime":1609396630565,"results":"123","hashOfConfig":"124"},{"size":425,"mtime":1608710713517,"results":"125","hashOfConfig":"124"},{"size":683,"mtime":1609397055244,"results":"126","hashOfConfig":"124"},{"size":1301,"mtime":1611996268674,"results":"127","hashOfConfig":"124"},{"size":207,"mtime":1609404664239,"results":"128","hashOfConfig":"124"},{"size":336,"mtime":1611995580963,"results":"129","hashOfConfig":"124"},{"size":252,"mtime":1609409607386,"results":"130","hashOfConfig":"124"},{"size":187,"mtime":1609393347784,"results":"131","hashOfConfig":"124"},{"size":10967,"mtime":1611992389066,"results":"132","hashOfConfig":"124"},{"size":4765,"mtime":1611992391604,"results":"133","hashOfConfig":"124"},{"size":8232,"mtime":1611992393552,"results":"134","hashOfConfig":"124"},{"size":22878,"mtime":1611992397333,"results":"135","hashOfConfig":"124"},{"size":29582,"mtime":1611992395431,"results":"136","hashOfConfig":"124"},{"size":5963,"mtime":1611992399750,"results":"137","hashOfConfig":"124"},{"size":9827,"mtime":1611992383882,"results":"138","hashOfConfig":"124"},{"size":4763,"mtime":1611992403078,"results":"139","hashOfConfig":"124"},{"size":4184,"mtime":1611992406462,"results":"140","hashOfConfig":"124"},{"size":2075,"mtime":1611997791031,"results":"141","hashOfConfig":"124"},{"size":1807,"mtime":1609730486829,"results":"142","hashOfConfig":"124"},{"size":836,"mtime":1609741792792,"results":"143","hashOfConfig":"124"},{"size":227,"mtime":1611222471686,"results":"144","hashOfConfig":"124"},{"size":457,"mtime":1609407449165,"results":"145","hashOfConfig":"124"},{"size":973,"mtime":1610965962356,"results":"146","hashOfConfig":"124"},{"size":1258,"mtime":1611111122253,"results":"147","hashOfConfig":"124"},{"size":7938,"mtime":1610693946838,"results":"148","hashOfConfig":"124"},{"size":827,"mtime":1611052617428,"results":"149","hashOfConfig":"124"},{"size":3205,"mtime":1611109887978,"results":"150","hashOfConfig":"124"},{"size":6553,"mtime":1610693999161,"results":"151","hashOfConfig":"124"},{"size":4704,"mtime":1611210896330,"results":"152","hashOfConfig":"124"},{"size":3949,"mtime":1611050431227,"results":"153","hashOfConfig":"124"},{"size":3695,"mtime":1611995412938,"results":"154","hashOfConfig":"124"},{"size":489,"mtime":1611996743121,"results":"155","hashOfConfig":"124"},{"size":302,"mtime":1611047264307,"results":"156","hashOfConfig":"124"},{"size":2903,"mtime":1611991595885,"results":"157","hashOfConfig":"124"},{"size":270,"mtime":1611110900626,"results":"158","hashOfConfig":"124"},{"size":848,"mtime":1611995354870,"results":"159","hashOfConfig":"124"},{"size":574,"mtime":1611991483478,"results":"160","hashOfConfig":"124"},{"size":868,"mtime":1611991490011,"results":"161","hashOfConfig":"124"},{"size":276,"mtime":1611991495074,"results":"162","hashOfConfig":"124"},{"size":736,"mtime":1611997753633,"results":"163","hashOfConfig":"124"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},"ng4blb",{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"166"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wgtqzz",{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"166"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"166"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"166"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"166"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"166"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"166"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"166"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"237","usedDeprecatedRules":"166"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"166"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"166"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"166"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"166"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"166"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"166"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"166"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"166"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"166"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"269"},"wyojx4",{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"278"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"269"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"269"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"269"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"269"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"269"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"269"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"269"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"237","usedDeprecatedRules":"269"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"269"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"269"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\react\\ts-react\\src\\App.tsx",[],["349","350"],"F:\\react\\ts-react\\src\\index.tsx",["351"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './store'\ninterface Ir{\n  isShow:boolean;\n}\nconst store = createStore(reducer);\nReactDOM.render(\n  \n    <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","F:\\react\\ts-react\\src\\components\\hello.tsx",[],"F:\\react\\ts-react\\src\\components\\like.tsx",["352","353"],"F:\\react\\ts-react\\src\\components\\loaddata.tsx",["354"],"F:\\react\\ts-react\\src\\hooks\\useGetData.tsx",["355","356"],"import {useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nconst useGetData = (url:string,deps:any[]=[]):any=>{\r\n    const [load,setLoading] = useState(false)\r\n    const [data,setData] = useState<any>({})\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        axios.get(url).then(res=>{\r\n            setData(res.data)\r\n            setLoading(false)\r\n        })\r\n    },deps)\r\n    return [ data, load ]\r\n}\r\nexport default useGetData",["357","358"],"F:\\react\\ts-react\\src\\reportWebVitals.ts",[],"F:\\react\\ts-react\\src\\components\\Button\\button.tsx",["359"],"import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport {ThemeContext} from '../../App';\r\nimport Icon from '../Icon'\r\ninterface Ibutton{\r\n    type?:string;\r\n    size?:string;\r\n    disabled?:boolean;\r\n    shape?:string;\r\n    ghost?:boolean;\r\n    block?:boolean;\r\n    children?:React.ReactNode;\r\n    onClick?: any;\r\n    style?:any;\r\n    danger?:boolean;\r\n    loading?:boolean;\r\n}\r\n\r\nconst Button:React.FC<Ibutton> = (props)=>{\r\n    const {\r\n        type='default',\r\n        size='normal',\r\n        disabled=false,\r\n        ghost = false,\r\n        block=false,\r\n        shape,\r\n        children,\r\n        style,\r\n        danger=false,\r\n        loading=false,\r\n        /** if we extract items here, we dont need use omit.js */\r\n        // React does not recognize the `htmlType` prop on a DOM element. Here we pick it out of `rest`.\r\n        ...rest\r\n      } = props;\r\n    const theme = React.useContext(ThemeContext)\r\n    const perfixCls = theme(\"btn\")\r\n    const classes = classNames(perfixCls, {\r\n        [`${perfixCls}-${type}`]:type,\r\n        [`${perfixCls}-${size}`]:size,\r\n        [`${perfixCls}-${shape}`]:shape,\r\n        [`${perfixCls}-disabled`]:disabled,\r\n        [`${perfixCls}-block`]:block,\r\n        [`${perfixCls}-ghost`]:ghost,\r\n        [`${perfixCls}-danger`]:danger,\r\n    })\r\n    const handleClick = (e:any)=>{\r\n        if(props.disabled) return \r\n        const { onClick } = props;\r\n        if(onClick){\r\n            onClick(e)\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes} onClick={(e)=>handleClick(e)} style={style}>\r\n            {\r\n            loading\r\n                ? <Icon icon=\"icon-loading\" style={{marginRight:\"8px\"}} spin/>\r\n                : \"\"\r\n            }\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Button","F:\\react\\ts-react\\src\\components\\Icon\\index.tsx",[],"F:\\react\\ts-react\\src\\site\\layout\\content\\Document.tsx",[],"F:\\react\\ts-react\\src\\site\\layout\\index.tsx",["360","361","362","363"],"F:\\react\\ts-react\\src\\site\\layout\\content\\content.tsx",["364","365","366"],"import React,{useState,useEffect} from 'react';\r\nimport CodePreview from './demo/CodePreview'\r\nimport {Icontent} from '../../interface/document'\r\ninterface IDoc{\r\n    content:Icontent[];\r\n}\r\nconst Content:React.FC<IDoc> = (props:IDoc)=>{\r\n    const {content}=props\r\n    const cLength = content.length\r\n    if(cLength<1) return (<div></div>)\r\n    if(cLength===1){\r\n        return (\r\n            <div className=\"codeWrap\">\r\n                <CodePreview {...content[0]}/>\r\n            </div> \r\n        )   \r\n    }\r\n    let left:Icontent[]=[];\r\n    let right:Icontent[]=[];\r\n    const middle = cLength % 2 ==0 ? cLength/2 : Math.floor(cLength/2) + 1\r\n    for(let i=0;i<middle;i++){\r\n        left=[...left,content[i]]\r\n    }\r\n    for(let i=0;i<cLength-middle;i++){\r\n        right=[...right,content[i+middle]]\r\n    }\r\n    if(content[0].col===1){\r\n        return (\r\n            <div>\r\n                <div className=\"codeWrap\" style={{width:\"100%\"}}>\r\n                    {content.map((item:Icontent)=>{\r\n                        return (<CodePreview key={item.id} {...item}/>)\r\n                    })}\r\n                </div> \r\n            </div>\r\n        ) \r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"codeWrap\">\r\n                {left.map((item:Icontent)=>{\r\n                    return (<CodePreview key={item.id} {...item}/>)\r\n                })}\r\n            </div> \r\n            <div className=\"codeWrap\" style={{paddingRight:\"0px\"}}>\r\n                {right.map((item:Icontent)=>{\r\n                    return (<CodePreview key={item.id} {...item}/>)\r\n                })}\r\n            </div> \r\n        </div>\r\n    ) \r\n}\r\n/*class Content extends React.Component<IDoc> {\r\n    constructor(props:IDoc){\r\n        super(props)\r\n    }\r\n    render(){\r\n        const {content}=this.props\r\n        const cLength = content.length\r\n        if(cLength<1) return (<div></div>)\r\n        if(cLength===1){\r\n            return (\r\n                <div className=\"codeWrap\">\r\n                    <CodePreview {...content[0]}/>\r\n                </div> \r\n            )   \r\n        }\r\n        let left:Icontent[]=[];\r\n        let right:Icontent[]=[];\r\n        const middle = cLength % 2 ==0 ? cLength/2 : Math.floor(cLength/2) + 1\r\n        for(let i=0;i<middle;i++){\r\n            left=[...left,content[i]]\r\n        }\r\n        for(let i=0;i<cLength-middle;i++){\r\n            right=[...right,content[i+middle]]\r\n        }  \r\n        return (\r\n            <div>\r\n                <div className=\"codeWrap\">\r\n                    {left.map((item:Icontent)=>{\r\n                        return (<CodePreview key={item.id} {...item}/>)\r\n                    })}\r\n                </div> \r\n                <div className=\"codeWrap\" style={{paddingRight:\"0px\"}}>\r\n                    {right.map((item:Icontent)=>{\r\n                        return (<CodePreview key={item.id} {...item}/>)\r\n                    })}\r\n                </div> \r\n            </div>\r\n        ) \r\n    }\r\n}*/\r\nexport default Content","F:\\react\\ts-react\\src\\site\\layout\\content\\Brief.tsx",[],"F:\\react\\ts-react\\src\\site\\layout\\content\\Params.tsx",[],"F:\\react\\ts-react\\src\\site\\layout\\header.tsx",["367","368"],"import React from 'react';\r\nimport Icon from \"../../components/Icon\"\r\nimport logo from \"../../logo.png\"\r\nconst Header:React.FC = ()=>{\r\n    return (\r\n        <header id=\"header\">\r\n            <div className=\"header-row\">\r\n                <a id=\"logoBox\">\r\n                    <img className=\"logo_img\" src={logo}/>\r\n                    <span>Sxd Design</span>\r\n                </a>\r\n                <div id=\"searchBox\">\r\n                    <Icon icon=\"icon-search\" style={{paddingRight:\"16px\"}}/>\r\n                    <input type=\"text\" placeholder=\"搜索\"/>\r\n                </div>\r\n                <div id=\"otherBox\">\r\n                    <div className=\"version\">Version : 0.0.1</div>\r\n                    <div className=\"git\"> </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    ) \r\n}\r\nexport default Header","F:\\react\\ts-react\\src\\site\\layout\\leftNav.tsx",[],"F:\\react\\ts-react\\src\\site\\layout\\footer.tsx",[],"F:\\react\\ts-react\\src\\site\\layout\\content\\demo\\CodePreview.tsx",[],"F:\\react\\ts-react\\src\\site\\pages\\Button.tsx",[],"F:\\react\\ts-react\\src\\site\\pages\\Index.tsx",["369"],"import React,{useState} from 'react'\r\n\r\nconst Index:React.FC = ()=>{\r\n    \r\n    return (\r\n        <div className=\"contentInner\">\r\n        123\r\n\r\n    </div>\r\n    )\r\n}\r\nexport default Index","F:\\react\\ts-react\\src\\router\\index.js",["370"],"import React from 'react';\r\nimport {Switch,Route,Redirect} from 'react-router-dom'\r\nimport Layout from '../site/layout'\r\nimport ButtonPage from '../site/pages/Button'\r\nimport Index from '../site/pages/Index'\r\nimport SelectPage from '../site/pages/Select'\r\nimport InputPage from '../site/pages/Input'\r\nimport IconPage from '../site/pages/Icon'\r\nimport GridPage from '../site/pages/Grid'\r\nimport DividerPage from '../site/pages/Divider'\r\nimport CheckboxPage from '../site/pages/Checkbox'\r\nimport RadioPage from '../site/pages/Radio'\r\nimport TablePage from '../site/pages/Table'\r\nfunction AppRouter(props) {\r\n  return (\r\n\r\n    <Switch>\r\n      <Route exact path='/button' render={(props)=><Layout {...props}><ButtonPage/></Layout>}/>\r\n      <Route exact path='/icon' render={(props)=><Layout {...props}><IconPage/></Layout>}/>\r\n      <Route exact path='/index' render={(props)=><Layout {...props}><p>23</p></Layout>}/>\r\n      <Route exact path='/divider' render={(props)=><Layout {...props}><DividerPage/></Layout>}/>\r\n      <Route exact path='/grid' render={(props)=><Layout {...props}><GridPage/></Layout>}/>\r\n      <Route exact path='/select' render={(props)=><Layout {...props}><SelectPage></SelectPage></Layout>}/>\r\n      <Route exact path='/checkbox' render={(props)=><Layout {...props}><CheckboxPage/></Layout>}/>\r\n      <Route exact path='/radio' render={(props)=><Layout {...props}><RadioPage/></Layout>}/>\r\n      <Route exact path='/input' render={(props)=><Layout {...props}><InputPage/></Layout>}/>\r\n      <Route exact path='/table' render={(props)=><Layout {...props}><TablePage/></Layout>}/>\r\n      <Redirect to=\"button\"/>\r\n    </Switch>\r\n\r\n  );\r\n}\r\nexport default AppRouter;\r\n",["371","372"],"F:\\react\\ts-react\\src\\store\\index.js",[],"F:\\react\\ts-react\\src\\store\\route.js",[],"F:\\react\\ts-react\\src\\store\\screenWidth.js",[],"F:\\react\\ts-react\\src\\site\\layout\\hooks\\useScreenWidth.tsx",["373","374"],"import {useState,useEffect} from 'react'\r\nconst useScreenWidth = (width:number,deps:any[]=[]):any=>{\r\n    const [dynStyle,setdynStyle] = useState({width:\"20%\",padding:\"50px 0 50px 20%\"})\r\n    useEffect(()=>{\r\n        if(width<=750){\r\n            setdynStyle({width:\"0\",padding:\"50px 0 50px 0\"})\r\n        }else{\r\n            setdynStyle({width:\"20%\",padding:\"50px 0 50px 20%\"})\r\n        }\r\n    },deps)\r\n    return  dynStyle \r\n}\r\nexport default useScreenWidth","F:\\react\\ts-react\\src\\components\\Table\\index.tsx",[],"F:\\react\\ts-react\\src\\site\\pages\\Select.tsx",["375","376","377","378","379"],"import Document from '../layout/content/Document'\r\nimport React,{useState} from 'react'\r\nimport {IBrief, Icontent, Iprops} from '../interface/document'\r\nimport Button from '../../components/Button/button'\r\nimport {Select,Option} from '../../components/Select'\r\n\r\nimport Icon from '../../components/Icon'\r\nimport Table from '../../components/Table'\r\nconst ButtonPage:React.FC = ()=>{\r\n    const brief:IBrief={\r\n        introduce:<>\r\n        <h1>Select选择器</h1>\r\n        <p>下拉选择器。</p>\r\n        <h2>何时使用</h2>\r\n        <div>\r\n            <ul>\r\n                <li>\r\n                    <p>弹出一个下拉菜单给用户选择操作，用于代替原生的选择器，或者需要一个更优雅的多选器时。</p>\r\n                </li>\r\n                <li>\r\n                    <p>当选项少时（少于 5 项），建议直接将选项平铺，使用 Radio 是更好的选择。</p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <h2>代码演示</h2>\r\n        </>\r\n    }\r\n    const [loading,setLoading] = useState(false)\r\n    const valueChange=(val:any)=>{\r\n        console.log(val)\r\n    }\r\n    const items:Icontent[]=[\r\n        {\r\n            id:1,\r\n            demo:<div>\r\n                    <Select defaultValue=\"a10\">\r\n                        <Option value=\"a10\" label=\"label\">a10</Option>\r\n                        <Option value=\"b11\">b11</Option>\r\n                        <Option value=\"c12\">c12</Option>\r\n                        <Option value=\"d13\">d13</Option>\r\n                        <Option value=\"e14\">e14</Option>\r\n                    </Select>\r\n                </div>,\r\n            title:\"基本使用\",\r\n            description:\"单选，基本使用。\",\r\n            code:\r\n`\r\nimport {Select,Option} from 'sxdui'\r\n<div>\r\n    <Select defaultValue=\"a10\">\r\n        <Option value=\"a10\" label=\"label\">a10</Option>\r\n        <Option value=\"b11\">b11</Option>\r\n        <Option value=\"c12\">c12</Option>\r\n        <Option value=\"d13\">d13</Option>\r\n        <Option value=\"e14\">e14</Option>\r\n    </Select>\r\n</div>\r\n`\r\n        },\r\n        {\r\n            id:2,\r\n            demo:<div>\r\n                    <Select mode=\"multiple\" defaultValue={[\"a10\",\"b11\"]} clearable>\r\n                        <Option value=\"a10\" label=\"label\">a10</Option>\r\n                        <Option value=\"b11\">b11</Option>\r\n                        <Option value=\"c12\">c12</Option>\r\n                        <Option value=\"d13\">d13</Option>\r\n                        <Option value=\"e14\">e14</Option>\r\n                    </Select>\r\n                </div>,\r\n            title:\"多选\",\r\n            description:\"多选，从已有条目中选择\",\r\n            code:\r\n`\r\nimport {Select,Option} from 'sxdui'\r\n<div>\r\n    <Select mode=\"multiple\" defaultValue={[\"a10\",\"b11\"]} clearable>\r\n        <Option value=\"a10\" label=\"label\">a10</Option>\r\n        <Option value=\"b11\">b11</Option>\r\n        <Option value=\"c12\">c12</Option>\r\n        <Option value=\"d13\">d13</Option>\r\n        <Option value=\"e14\">e14</Option>\r\n    </Select>\r\n</div>\r\n`\r\n        },\r\n    ];\r\n\r\n    const data=[\r\n        {\r\n          key:1,\r\n          arguments: 'mode',\r\n          brief: \"设置 Select 的模式为多选\",\r\n          type: 'string',\r\n          options: 'multiple',\r\n          default:\"-\"\r\n        },\r\n        {\r\n          key:2,\r\n          arguments: 'defaultValue',\r\n          brief: \"指定默认选中的条目\",\r\n          type: 'string | string[] number | number[]',\r\n          default:\"-\"\r\n        },\r\n     ];\r\n     const data2=[\r\n        {\r\n          key:1,\r\n          arguments: 'value',\r\n          brief: \"默认根据此属性值进行筛选\",\r\n          type: 'string | number',\r\n          options: '',\r\n          default:\"-\"\r\n        },\r\n        {\r\n          key:2,\r\n          arguments: 'label',\r\n          brief: \"选中该 Option 后，Select 的 title\",\r\n          type: 'string',\r\n          options: '',\r\n          default:\"-\"\r\n        },\r\n     ];\r\n     const columns=[\r\n        {\r\n            title: '参数',\r\n            dataIndex: 'arguments'\r\n        },\r\n        {\r\n            title: '说明',\r\n            dataIndex: 'brief'\r\n        },\r\n        {\r\n            title: '类型',\r\n            dataIndex: 'type'\r\n        },\r\n        {\r\n            title: '默认值',\r\n            dataIndex: 'default',\r\n        }\r\n    ];\r\n    const api = \r\n        <div>\r\n            <h2>Select 参数</h2>\r\n            <Table data={data} columns={columns} />\r\n            <h2>Option 参数</h2>\r\n            <Table data={data2} columns={columns} />\r\n        </div>\r\n      \r\n      \r\n    const document:Iprops = {\r\n        brief:brief,\r\n        content:items,\r\n        api:api\r\n    }\r\n    return (<Document document={document}/>)\r\n}\r\nexport default ButtonPage","F:\\react\\ts-react\\src\\components\\Select\\index.tsx",["380","381","382","383","384","385"],"import React,{useState, useEffect, useRef} from 'react';\r\nimport classNames from 'classnames';\r\nimport Icon from '../Icon'\r\ninterface ISelect{\r\n    mode?:string;\r\n    defaultValue?:any;\r\n    clearable?:boolean;\r\n    children?:any;\r\n    childrenArray?:any;\r\n    style?:object;\r\n    onChange?:any;\r\n}\r\ninterface IOption{\r\n    children:any;\r\n    value?:any;\r\n    label?:any;\r\n}\r\ninterface ISelectInfo{\r\n    key:string;\r\n    isSelect:boolean;\r\n    value:any;\r\n    label:any;\r\n    \r\n}\r\n//util工具方法\r\nconst getInnerText = (child:any)=>{\r\n    if(typeof child.children==='string'){\r\n        return child.children\r\n    }else{\r\n        return child.value\r\n    }\r\n}\r\nconst isSelect = (dv:any,cv:any)=>{\r\n    if(typeof dv===\"string\"){\r\n        return dv===cv\r\n    }else if(typeof dv===\"object\"){\r\n        return dv.indexOf(cv)>-1\r\n    }\r\n    return false\r\n}\r\n\r\nconst Option:React.FC<IOption>=(props:IOption)=>{\r\n    return (\r\n        <div>\r\n            <p>{props.children}</p>\r\n        </div>\r\n    )\r\n}\r\nconst Select:React.FC<ISelect> = (props)=>{\r\n    const { children=[], onChange=()=>{}, clearable, defaultValue=[], mode, style } = props;\r\n    // init\r\n    const setInitData = ()=>{\r\n        \r\n        if(!children || children.length<1){\r\n            return []\r\n        }\r\n        let initData:ISelectInfo[]=[]\r\n        for(let i=0;i<children.length;i++){\r\n            initData.push({\r\n                key:children[i].props.key || children[i].props.value,\r\n                isSelect:isSelect(defaultValue,children[i].props.value),\r\n                label:children[i].props.label || getInnerText(children[i].props) || \"\",\r\n                value:children[i].props.value,\r\n            })\r\n        }\r\n        return initData\r\n    }\r\n    //usestate\r\n    const [isShowOption,setShowStatus] = useState(false)\r\n    const [iconRotate,setIconRotate] = useState({ transform:\"rotate(0deg)\" })\r\n    const [top,setTop] = useState(40)\r\n    const [selectedInfo,setselectedInfo] = useState<ISelectInfo[]>( setInitData() )\r\n    //点击事件监听\r\n    const selectRef:any = useRef();\r\n    const fn = (e:any)=>{\r\n        if(mode!==\"multiple\"){\r\n            removeListener()\r\n        }\r\n        if(selectRef.current!==e.target && !selectRef.current.contains(e.target||\"\")){\r\n            setShowStatus(false) \r\n            removeListener()\r\n        }\r\n    }\r\n    const addListener = ()=>{\r\n        window.addEventListener('click', fn, true);\r\n    }\r\n    const removeListener = ()=>{\r\n        window.removeEventListener('click', fn, true);\r\n    }\r\n\r\n    let flag=useRef(true)\r\n    useEffect(()=>{\r\n        let doc:HTMLElement | null = document.getElementById(\"calcHeight\")\r\n        let height:number = doc?doc.clientHeight:32\r\n        setTop(10+height)\r\n        if(flag.current){\r\n            flag.current=false\r\n            return\r\n        }\r\n        if(mode===\"multiple\"){\r\n            let emitVal:any[]=[]\r\n            selectedInfo.map((item:ISelectInfo)=>{\r\n                if(item.isSelect) emitVal.push(item.value)\r\n            })\r\n            onChange(emitVal)\r\n        }else{\r\n            selectedInfo.map((item:ISelectInfo)=>{\r\n                if(item.isSelect) onChange(item.value)\r\n            })\r\n            setShowStatus(false)\r\n        }\r\n    },[selectedInfo])\r\n    //onclick事件： 清空，下拉，选择\r\n    const handleClear = (e:any)=>{\r\n        e.stopPropagation();\r\n        setselectedInfo(selectedInfo.map((info:ISelectInfo)=>{\r\n            return {...info,isSelect:false}\r\n        }))\r\n    }\r\n    const dropDown = ()=>{\r\n        addListener();\r\n        setShowStatus(!isShowOption)\r\n    }\r\n    const multipleClick = (item:any,e:any)=>{\r\n        e.stopPropagation()\r\n        if(mode===\"multiple\"){ \r\n            //此处更新为异步\r\n            setselectedInfo(selectedInfo.map((info:ISelectInfo)=>{\r\n                if(info.key===(item.key || item.value)){  \r\n                    return {...info,isSelect:!info.isSelect}\r\n                }\r\n                return info\r\n            }))\r\n        }else{\r\n            setselectedInfo(selectedInfo.map((info:ISelectInfo)=>{\r\n                if(info.key===(item.key || item.value)){\r\n                    \r\n                    return {...info,isSelect:true}\r\n                }\r\n                return {...info,isSelect:false}\r\n            }))\r\n        }\r\n    }\r\n    //展示框\r\n    const displayArea = ()=>{\r\n        const selectedClass=classNames(\"selectedText\",{\"selectedText-focus\":isShowOption})\r\n        const dropDownIcon = mode!==\"multiple\"\r\n            ?(<Icon className=\"suffixIcon\" style={isShowOption?{transform:\"rotate(-180deg)\"}:{transform:\"rotate(0deg)\"}} icon=\"icon-arrow-down-bold\"/>)\r\n            :\"\";\r\n        const clearIcon = clearable && selectedInfo.some((item:ISelectInfo)=>item.isSelect)\r\n            ?(<span className=\"clearIcon\" onClick={(e)=>handleClear(e)}>\r\n                <Icon style={{fontSize:\"14px\"}} icon=\"icon-close-bold\"/>\r\n            </span>)\r\n            :\"\";\r\n        const displayInline =(item:any)=>{\r\n            if(item.isSelect){\r\n                return mode===\"multiple\"\r\n                    ?(\r\n                        <div className=\"multipleItem\" key={item.key}>\r\n                            <span className=\"item-label\">\r\n                                {item.label}\r\n                            </span>\r\n                            <span onClick={(e)=>multipleClick(item,e)}>\r\n                                <Icon className=\"item-icon\" icon=\"icon-close-bold\"/>\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                    :(\r\n                        <div style={{paddingRight:\"12px\"}} key={item.key}>\r\n                            {item.label}\r\n                        </div>\r\n                    )\r\n            }\r\n            return \"\"\r\n        } \r\n        return (\r\n            <div className={selectedClass} onClick={()=>dropDown()}>\r\n                <div className=\"multipleBox\" id={isShowOption?\"calcHeight\":\"\"}>\r\n                    {selectedInfo.map((item:ISelectInfo)=>{\r\n                        return displayInline(item)\r\n                    })}\r\n                </div>\r\n                {dropDownIcon}\r\n                {clearIcon}\r\n            </div>\r\n        )\r\n    }\r\n    //列表\r\n    const OptionList = ()=>{\r\n        if(isShowOption){\r\n            if(children && children.length>0){\r\n                const row = (info:any)=>{\r\n                    const optionsClasses = classNames(\"optionItem\",{\"optionItem-selected\":info.isSelect})\r\n                    const iconArea = info.isSelect?(<div><Icon style={{color:\"#1890ff\"}} icon=\"icon-select\"/></div>):\"\"\r\n                    return mode===\"multiple\"\r\n                        ?(<div className={optionsClasses} key={info.key} onClick={(e)=>multipleClick(info,e)}>\r\n                            <div style={{flex:\"auto\",userSelect: \"none\"}}>\r\n                                {info.label}\r\n                            </div>\r\n                            {iconArea}\r\n                        </div>)\r\n                        :(<div className={optionsClasses} key={info.key} onClick={(e)=>multipleClick(info,e)}>\r\n                            {info.label}\r\n                        </div>)\r\n                }\r\n                return (\r\n                    <div className=\"selectOptions\" style={{top:top+'px'}}>\r\n                        {selectedInfo.map((info:ISelectInfo)=>{\r\n                            {return row(info)}\r\n                        })}\r\n                    </div>\r\n                )\r\n            }else{\r\n                return (\r\n                    <div className=\"selectOptions\">\r\n                        <div>no data</div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        return \"\"\r\n    }\r\n    return (\r\n        <div className=\"select\"  style={style} ref={selectRef}>\r\n            {displayArea()}\r\n            {OptionList()}\r\n        </div>\r\n    )\r\n}\r\nexport {Select,Option}","F:\\react\\ts-react\\src\\site\\pages\\Input.tsx",[],"F:\\react\\ts-react\\src\\components\\Input\\index.tsx",["386","387","388","389","390","391"],"import React,{useState, useEffect,useRef} from 'react'\r\nimport classNames from 'classnames';\r\nimport Icon from '../Icon'\r\nimport {Select} from '../Select'\r\nimport { clear } from 'console';\r\ninterface IInput  {\r\n    size?:string;\r\n    style?:object;\r\n    placeholder?:string;\r\n    value?:any;\r\n    defaultValue?:any;\r\n    prefix?:any;\r\n    suffix?:any;\r\n    addonBefore?:any;\r\n    addonAfter?:any;\r\n    clearable?:boolean;\r\n    children?:any;\r\n    //事件\r\n    onChange?:any;\r\n    onClick?:any;\r\n}\r\nconst Input:React.FC<IInput> = (props:IInput)=>{\r\n    const {style,size=\"default\",placeholder=\"\", value=\"\",defaultValue=\"\", prefix=\"\", suffix=\"\", addonBefore, addonAfter, clearable=false, onChange=()=>{},onClick=()=>{}} = props\r\n    const [valueInner,setValue] = useState(value)\r\n    const handleChange = (e:any)=>{\r\n        let value = e.target.value\r\n        setValue(value)\r\n        onChange(value)\r\n    }\r\n    \r\n    const renderInput = ()=>{\r\n        return (\r\n            <input className=\"sxd-input\" onClick={()=>{onClick()}} placeholder={placeholder} value={valueInner} onChange={(e)=>handleChange(e)}/>\r\n        )\r\n    }\r\n    const [isFocus,setFocus] = useState(false)\r\n    const classes = classNames(\"sxd-input-wrap\",{\r\n        [`sxd-wrap-${size}`]:size,\r\n        [\"sxd-input-wrap-focus\"]:isFocus\r\n    })\r\n    const inputWrapRef:any = useRef();\r\n    const fn = (e:any)=>{\r\n        removeListener()\r\n        setFocus(false) \r\n        \r\n    }\r\n    const addListener = ()=>{\r\n        document.addEventListener('click', fn, true);\r\n    }\r\n    const removeListener = ()=>{\r\n        document.removeEventListener('click', fn, true);\r\n    }\r\n    const wrapFocus = ()=>{\r\n        addListener();\r\n        setFocus(true)\r\n    }\r\n    const beforeInfo = ()=>{\r\n        if(typeof addonBefore==='string'){\r\n            return (<span className=\"groupAdd\">{addonBefore}</span>)\r\n        }\r\n        return addonBefore\r\n    }\r\n    const afterInfo = ()=>{\r\n        if(typeof addonAfter==='string'){\r\n            return (<span className=\"groupAdd\">{addonAfter}</span>)\r\n        }\r\n        return addonAfter\r\n    }\r\n    const wrapInput = ()=>{\r\n        if(size!==\"default\" || prefix!==\"\" || suffix!==\"\" || addonBefore!==\"\" || addonAfter!==\"\")\r\n        {\r\n            return (\r\n                <div className=\"groupWrap\">\r\n                    {beforeInfo()}\r\n                    <div className={classes}  style={style} onClick={()=>{wrapFocus()}} ref={inputWrapRef}>\r\n                        {prefix}\r\n                        \r\n                        {renderInput()}\r\n                        \r\n                        {clearable && valueInner!==\"\"?(\r\n                            <Icon \r\n                            icon=\"icon-close-bold\" \r\n                            style={{cursor:\"pointer\"}}\r\n                            onClick={()=>setValue(\"\")}\r\n                            />\r\n                            ):\"\"}\r\n                        {suffix}\r\n                    </div>\r\n                    {afterInfo()}\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className={classes}  style={style} onClick={()=>{wrapFocus()}} ref={inputWrapRef}>\r\n                {renderInput()}\r\n            </div>\r\n        )\r\n    }\r\n    return wrapInput()\r\n}\r\n\r\n\r\ninterface IOptions  {\r\n    key?:any;\r\n    value:number|string;\r\n    label?:number|string;\r\n}\r\ninterface IFilterOptions{\r\n    key:any;\r\n    isShow:boolean;\r\n    value:number|string;\r\n    label:number|string;\r\n}\r\ninterface IAutoComplete  {\r\n    defaultValue?:number|string;\r\n    options:IOptions[];\r\n    placeholder?:string;\r\n    onChange?:any;\r\n    style?:object;\r\n}\r\nconst AutoComplete:React.FC<IAutoComplete> = (props:IAutoComplete)=>{\r\n    const { defaultValue=\"\",style,placeholder,options, onChange=()=>{}} = props\r\n    const [inputVal,setInputVal] = useState(defaultValue)\r\n    const inputWrapRef:any = useRef();\r\n    const fn = (e:any)=>{\r\n        removeListener()\r\n        if(inputWrapRef.current!==e.target && !inputWrapRef.current.contains(e.target||\"\")){\r\n            setShowStatus(false)  \r\n        }\r\n    }\r\n    const addListener = ()=>{\r\n        document.addEventListener('click', fn, true);\r\n    }\r\n    const removeListener = ()=>{\r\n        document.removeEventListener('click', fn, true);\r\n    }\r\n    const initData = ()=>{\r\n        if(!options || options.length<1){\r\n            return []\r\n        }\r\n        let initData:IFilterOptions[]=[]\r\n        for(let i=0;i<options.length;i++){\r\n            if(!options[i].key) options[i].key=options[i].value\r\n            initData.push({\r\n                key:options[i].key,\r\n                isShow:true,\r\n                label:options[i].label || options[i].value,\r\n                value:options[i].value,\r\n            })\r\n        }\r\n        return initData\r\n    }\r\n    const [filterOptions,setOptions] = useState(initData())\r\n    const [isShowOption,setShowStatus] = useState(false)\r\n    const handleChange = (v:number|string)=>{\r\n        onChange(v)\r\n        setInputVal(v)\r\n        setOptions(filterOptions.map((item:IFilterOptions)=>{\r\n            return {...item,isShow:item.value.toString().indexOf(v.toString())>-1}\r\n        }))\r\n    }\r\n    const handleClick = (item:IFilterOptions,e:any)=>{\r\n        e.stopPropagation()\r\n        handleChange(item.value)\r\n        setShowStatus(false)\r\n        removeListener()\r\n    }\r\n    const OptionList = ()=>{\r\n        if(isShowOption && filterOptions.length>0 && filterOptions.some((item:IFilterOptions)=>item.isShow)){\r\n            return (\r\n                <div className=\"selectOptions\" style={{top:'35px'}}>\r\n                    {filterOptions.filter((item:IFilterOptions)=>{\r\n                        return item.isShow\r\n                    }).map((info:IFilterOptions)=>{\r\n                        return (\r\n                            <div className=\"optionItem\" key={info.key} onClick={(e)=>handleClick(info,e)}>\r\n                                {info.label}\r\n                            </div>\r\n                        )\r\n                    })\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n        return \"\"\r\n    }\r\n    return (\r\n        <div className=\"select\" ref={inputWrapRef}>\r\n            <input \r\n            className=\"sxd-input\" \r\n            placeholder={placeholder}\r\n            value={inputVal} \r\n            onChange={(e:any)=>{handleChange(e.target.value)}} \r\n            onClick={()=>{setShowStatus(true);addListener()}} \r\n            />\r\n            {OptionList()}\r\n        </div>\r\n        )\r\n}\r\nexport {Input,AutoComplete}","F:\\react\\ts-react\\src\\site\\pages\\Icon.tsx",["392","393","394","395","396"],"import Document from '../layout/content/Document'\r\nimport React,{useState} from 'react'\r\nimport {IBrief, Icontent, Iprops} from '../interface/document'\r\nimport Button from '../../components/Button/button'\r\nimport Icon from '../../components/Icon'\r\nimport Table from '../../components/Table'\r\nconst ButtonPage:React.FC = ()=>{\r\n    const brief:IBrief={\r\n      introduce:<>\r\n        <h1>Icon 图标</h1>\r\n        <p>提供了一套常用的图标集合。</p>\r\n        <h2>何时使用</h2>\r\n        <div>\r\n          <p>用图标展示一些信息。</p>\r\n        </div>\r\n        <h2>代码演示</h2>\r\n        </>\r\n    }\r\n    const items:Icontent[]=[\r\n        {\r\n            id:1,\r\n            demo:<div>\r\n                    <Icon icon=\"icon-search\"/>\r\n                    <Icon icon=\"icon-select-bold\"/>\r\n                    <Icon icon=\"icon-delete-filling\"/>\r\n                </div>,\r\n            title:\"基本使用\",\r\n            description:\"基本使用\",\r\n            code:\r\n`\r\nimport {Icon} from 'sxdui'\r\n<Icon icon=\"icon-search\"/>\r\n<Icon icon=\"icon-select-bold\"/>\r\n<Icon icon=\"icon-delete-filling\"/>\r\n`\r\n        },\r\n    ]\r\n\r\n    const data=[\r\n        {\r\n          key:1,\r\n          arguments: 'type',\r\n          brief: \"设置按钮类型\",\r\n          type: 'string',\r\n          options: 'primary | dashed | link | text | default',\r\n          default:\"default\"\r\n        },\r\n        {\r\n          key:2,\r\n          arguments: 'size',\r\n          brief: \"设置按钮尺寸\",\r\n          type: 'large | middle | small',\r\n          default:\"middle\"\r\n        },\r\n        {\r\n          key:3,\r\n          arguments: 'ghost',\r\n          brief: \"是否启用幽灵按钮\",\r\n          type: 'boolean',\r\n          default:\"false\"\r\n        },\r\n        {\r\n          key:4,\r\n          arguments: 'loading',\r\n          brief: \"是否加载中状态\",\r\n          type: 'boolean',\r\n          default:\"false\"\r\n        },\r\n        {\r\n          key:5,\r\n          arguments: 'disabled',\r\n          brief: \"是否禁用状态\",\r\n          type: 'boolean',\r\n          default:\"false\"\r\n        },\r\n        {\r\n          key:6,\r\n          arguments: 'shape',\r\n          brief: \"设置按钮形状\",\r\n          type: 'circle | round',\r\n          default:\"—\"\r\n        },\r\n     ];\r\n     const columns=[\r\n        {\r\n            title: '参数',\r\n            dataIndex: 'arguments'\r\n        },\r\n        {\r\n            title: '说明',\r\n            dataIndex: 'brief'\r\n        },\r\n        {\r\n            title: '类型',\r\n            dataIndex: 'type'\r\n        },\r\n        {\r\n            title: '默认值',\r\n            dataIndex: 'default',\r\n        }\r\n    ];\r\n    const api = \r\n        <div>\r\n            <h2>图标集合</h2>\r\n            <div className=\"content font-className\">\r\n        <ul className=\"icon_lists dib-box\">\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-3column\"></span>\r\n            <div className=\"name\">\r\n              column-3\r\n            </div>\r\n            <div className=\"code-name\">.icon-3column\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-column-4\"></span>\r\n            <div className=\"name\">\r\n              column-4\r\n            </div>\r\n            <div className=\"code-name\">.icon-column-4\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-add\"></span>\r\n            <div className=\"name\">\r\n              add\r\n            </div>\r\n            <div className=\"code-name\">.icon-add\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-add-circle\"></span>\r\n            <div className=\"name\">\r\n              add-circle\r\n            </div>\r\n            <div className=\"code-name\">.icon-add-circle\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-adjust\"></span>\r\n            <div className=\"name\">\r\n              adjust\r\n            </div>\r\n            <div className=\"code-name\">.icon-adjust\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-up-circle\"></span>\r\n            <div className=\"name\">\r\n              arrow-up-circle\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-up-circle\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-right-circle\"></span>\r\n            <div className=\"name\">\r\n              arrow-right-circle\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-right-circle\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-down\"></span>\r\n            <div className=\"name\">\r\n              arrow-down\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-down\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-ashbin\"></span>\r\n            <div className=\"name\">\r\n              ashbin\r\n            </div>\r\n            <div className=\"code-name\">.icon-ashbin\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-right\"></span>\r\n            <div className=\"name\">\r\n              arrow-right\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-right\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-browse\"></span>\r\n            <div className=\"name\">\r\n              browse\r\n            </div>\r\n            <div className=\"code-name\">.icon-browse\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-bottom\"></span>\r\n            <div className=\"name\">\r\n              bottom\r\n            </div>\r\n            <div className=\"code-name\">.icon-bottom\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-back\"></span>\r\n            <div className=\"name\">\r\n              back\r\n            </div>\r\n            <div className=\"code-name\">.icon-back\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-bad\"></span>\r\n            <div className=\"name\">\r\n              bad\r\n            </div>\r\n            <div className=\"code-name\">.icon-bad\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-double-left\"></span>\r\n            <div className=\"name\">\r\n              arrow-double-left\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-double-left\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-left-circle\"></span>\r\n            <div className=\"name\">\r\n              arrow-left-circle\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-left-circle\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-double-right\"></span>\r\n            <div className=\"name\">\r\n              arrow-double-right\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-double-right\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-caps-lock\"></span>\r\n            <div className=\"name\">\r\n              caps-lock\r\n            </div>\r\n            <div className=\"code-name\">.icon-caps-lock\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-camera\"></span>\r\n            <div className=\"name\">\r\n              camera\r\n            </div>\r\n            <div className=\"code-name\">.icon-camera\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-chart-bar\"></span>\r\n            <div className=\"name\">\r\n              chart-bar\r\n            </div>\r\n            <div className=\"code-name\">.icon-chart-bar\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-attachment\"></span>\r\n            <div className=\"name\">\r\n              attachment\r\n            </div>\r\n            <div className=\"code-name\">.icon-attachment\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-code\"></span>\r\n            <div className=\"name\">\r\n              code\r\n            </div>\r\n            <div className=\"code-name\">.icon-code\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-close\"></span>\r\n            <div className=\"name\">\r\n              close\r\n            </div>\r\n            <div className=\"code-name\">.icon-close\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-check-item\"></span>\r\n            <div className=\"name\">\r\n              check-item\r\n            </div>\r\n            <div className=\"code-name\">.icon-check-item\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-calendar\"></span>\r\n            <div className=\"name\">\r\n              calendar\r\n            </div>\r\n            <div className=\"code-name\">.icon-calendar\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-comment\"></span>\r\n            <div className=\"name\">\r\n              comment\r\n            </div>\r\n            <div className=\"code-name\">.icon-comment\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-column-vertical\"></span>\r\n            <div className=\"name\">\r\n              column-vertical\r\n            </div>\r\n            <div className=\"code-name\">.icon-column-vertical\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-column-horizontal\"></span>\r\n            <div className=\"name\">\r\n              column-horizontal\r\n            </div>\r\n            <div className=\"code-name\">.icon-column-horizontal\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-complete\"></span>\r\n            <div className=\"name\">\r\n              complete\r\n            </div>\r\n            <div className=\"code-name\">.icon-complete\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-chart-pie\"></span>\r\n            <div className=\"name\">\r\n              chart-pie\r\n            </div>\r\n            <div className=\"code-name\">.icon-chart-pie\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-cry\"></span>\r\n            <div className=\"name\">\r\n              cry\r\n            </div>\r\n            <div className=\"code-name\">.icon-cry\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-customer-service\"></span>\r\n            <div className=\"name\">\r\n              customer-service\r\n            </div>\r\n            <div className=\"code-name\">.icon-customer-service\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-delete\"></span>\r\n            <div className=\"name\">\r\n              delete\r\n            </div>\r\n            <div className=\"code-name\">.icon-delete\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-direction-down\"></span>\r\n            <div className=\"name\">\r\n              direction-down\r\n            </div>\r\n            <div className=\"code-name\">.icon-direction-down\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-copy\"></span>\r\n            <div className=\"name\">\r\n              copy\r\n            </div>\r\n            <div className=\"code-name\">.icon-copy\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-cut\"></span>\r\n            <div className=\"name\">\r\n              cut\r\n            </div>\r\n            <div className=\"code-name\">.icon-cut\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-direction-down-circle\"></span>\r\n            <div className=\"name\">\r\n              direction-down-circle\r\n            </div>\r\n            <div className=\"code-name\">.icon-direction-down-circle\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-direction-right\"></span>\r\n            <div className=\"name\">\r\n              direction-right\r\n            </div>\r\n            <div className=\"code-name\">.icon-direction-right\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-direction-up\"></span>\r\n            <div className=\"name\">\r\n              direction-up\r\n            </div>\r\n            <div className=\"code-name\">.icon-direction-up\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-direction-left\"></span>\r\n            <div className=\"name\">\r\n              direction-left\r\n            </div>\r\n            <div className=\"code-name\">.icon-direction-left\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-download\"></span>\r\n            <div className=\"name\">\r\n              download\r\n            </div>\r\n            <div className=\"code-name\">.icon-download\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-elipsis\"></span>\r\n            <div className=\"name\">\r\n              elipsis\r\n            </div>\r\n            <div className=\"code-name\">.icon-elipsis\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-edit\"></span>\r\n            <div className=\"name\">\r\n              edit\r\n            </div>\r\n            <div className=\"code-name\">.icon-edit\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-eye-close\"></span>\r\n            <div className=\"name\">\r\n              eye-close\r\n            </div>\r\n            <div className=\"code-name\">.icon-eye-close\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-email\"></span>\r\n            <div className=\"name\">\r\n              email\r\n            </div>\r\n            <div className=\"code-name\">.icon-email\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-error\"></span>\r\n            <div className=\"name\">\r\n              error\r\n            </div>\r\n            <div className=\"code-name\">.icon-error\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-favorite\"></span>\r\n            <div className=\"name\">\r\n              favorite\r\n            </div>\r\n            <div className=\"code-name\">.icon-favorite\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-file-common\"></span>\r\n            <div className=\"name\">\r\n              file-common\r\n            </div>\r\n            <div className=\"code-name\">.icon-file-common\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-fabulous\"></span>\r\n            <div className=\"name\">\r\n              fabulous\r\n            </div>\r\n            <div className=\"code-name\">.icon-fabulous\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-file\"></span>\r\n            <div className=\"name\">\r\n              file\r\n            </div>\r\n            <div className=\"code-name\">.icon-file\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-folder-close\"></span>\r\n            <div className=\"name\">\r\n              folder-close\r\n            </div>\r\n            <div className=\"code-name\">.icon-folder-close\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-filter\"></span>\r\n            <div className=\"name\">\r\n              filter\r\n            </div>\r\n            <div className=\"code-name\">.icon-filter\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-good\"></span>\r\n            <div className=\"name\">\r\n              good\r\n            </div>\r\n            <div className=\"code-name\">.icon-good\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-hide\"></span>\r\n            <div className=\"name\">\r\n              hide\r\n            </div>\r\n            <div className=\"code-name\">.icon-hide\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-home\"></span>\r\n            <div className=\"name\">\r\n              home\r\n            </div>\r\n            <div className=\"code-name\">.icon-home\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-file-open\"></span>\r\n            <div className=\"name\">\r\n              file-open\r\n            </div>\r\n            <div className=\"code-name\">.icon-file-open\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-link\"></span>\r\n            <div className=\"name\">\r\n              link\r\n            </div>\r\n            <div className=\"code-name\">.icon-link\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-lock\"></span>\r\n            <div className=\"name\">\r\n              lock\r\n            </div>\r\n            <div className=\"code-name\">.icon-lock\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-menu\"></span>\r\n            <div className=\"name\">\r\n              menu\r\n            </div>\r\n            <div className=\"code-name\">.icon-menu\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-loading\"></span>\r\n            <div className=\"name\">\r\n              loading\r\n            </div>\r\n            <div className=\"code-name\">.icon-loading\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-help\"></span>\r\n            <div className=\"name\">\r\n              help\r\n            </div>\r\n            <div className=\"code-name\">.icon-help\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-modular\"></span>\r\n            <div className=\"name\">\r\n              modular\r\n            </div>\r\n            <div className=\"code-name\">.icon-modular\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-notification\"></span>\r\n            <div className=\"name\">\r\n              notification\r\n            </div>\r\n            <div className=\"code-name\">.icon-notification\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-mic\"></span>\r\n            <div className=\"name\">\r\n              mic\r\n            </div>\r\n            <div className=\"code-name\">.icon-mic\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-more\"></span>\r\n            <div className=\"name\">\r\n              more\r\n            </div>\r\n            <div className=\"code-name\">.icon-more\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-play\"></span>\r\n            <div className=\"name\">\r\n              play\r\n            </div>\r\n            <div className=\"code-name\">.icon-play\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-print\"></span>\r\n            <div className=\"name\">\r\n              print\r\n            </div>\r\n            <div className=\"code-name\">.icon-print\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-search\"></span>\r\n            <div className=\"name\">\r\n              search\r\n            </div>\r\n            <div className=\"code-name\">.icon-search\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-share\"></span>\r\n            <div className=\"name\">\r\n              share\r\n            </div>\r\n            <div className=\"code-name\">.icon-share\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-select\"></span>\r\n            <div className=\"name\">\r\n              select\r\n            </div>\r\n            <div className=\"code-name\">.icon-select\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-stop\"></span>\r\n            <div className=\"name\">\r\n              stop\r\n            </div>\r\n            <div className=\"code-name\">.icon-stop\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-success\"></span>\r\n            <div className=\"name\">\r\n              success\r\n            </div>\r\n            <div className=\"code-name\">.icon-success\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-smile\"></span>\r\n            <div className=\"name\">\r\n              smile\r\n            </div>\r\n            <div className=\"code-name\">.icon-smile\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-setting\"></span>\r\n            <div className=\"name\">\r\n              setting\r\n            </div>\r\n            <div className=\"code-name\">.icon-setting\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-time\"></span>\r\n            <div className=\"name\">\r\n              time\r\n            </div>\r\n            <div className=\"code-name\">.icon-time\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-top\"></span>\r\n            <div className=\"name\">\r\n              top\r\n            </div>\r\n            <div className=\"code-name\">.icon-top\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-unlock\"></span>\r\n            <div className=\"name\">\r\n              unlock\r\n            </div>\r\n            <div className=\"code-name\">.icon-unlock\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-user\"></span>\r\n            <div className=\"name\">\r\n              user\r\n            </div>\r\n            <div className=\"code-name\">.icon-user\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-upload\"></span>\r\n            <div className=\"name\">\r\n              upload\r\n            </div>\r\n            <div className=\"code-name\">.icon-upload\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-warning\"></span>\r\n            <div className=\"name\">\r\n              warning\r\n            </div>\r\n            <div className=\"code-name\">.icon-warning\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-up-bold\"></span>\r\n            <div className=\"name\">\r\n              arrow-up-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-up-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-close-bold\"></span>\r\n            <div className=\"name\">\r\n              close-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-close-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-down-bold\"></span>\r\n            <div className=\"name\">\r\n              arrow-down-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-down-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-minus-bold\"></span>\r\n            <div className=\"name\">\r\n              minus-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-minus-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-right-bold\"></span>\r\n            <div className=\"name\">\r\n              arrow-right-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-right-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-select-bold\"></span>\r\n            <div className=\"name\">\r\n              select-bold\r\n            </div>\r\n            <div className=\"code-name\">.icon-select-bold\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-up-filling\"></span>\r\n            <div className=\"name\">\r\n              arrow-up-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-up-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-down-filling\"></span>\r\n            <div className=\"name\">\r\n              arrow-down-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-down-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-left-filling\"></span>\r\n            <div className=\"name\">\r\n              arrow-left-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-left-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-arrow-right-filling\"></span>\r\n            <div className=\"name\">\r\n              arrow-right-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-arrow-right-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-clock-filling\"></span>\r\n            <div className=\"name\">\r\n              clock-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-clock-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-delete-filling\"></span>\r\n            <div className=\"name\">\r\n              delete-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-delete-filling\r\n            </div>\r\n          </li>\r\n          \r\n          <li className=\"dib\">\r\n            <span className=\"icon iconfont icon-favorite-filling\"></span>\r\n            <div className=\"name\">\r\n              favorite-filling\r\n            </div>\r\n            <div className=\"code-name\">.icon-favorite-filling\r\n            </div>\r\n          </li>\r\n          \r\n        </ul>\r\n      </div>\r\n        </div>\r\n      \r\n      \r\n    const document:Iprops = {\r\n        brief:brief,\r\n        content:items,\r\n        api:api\r\n    }\r\n    return (<Document document={document}/>)\r\n}\r\nexport default ButtonPage","F:\\react\\ts-react\\src\\site\\pages\\Grid.tsx",["397","398","399"],"import Document from '../layout/content/Document'\r\nimport React,{useState} from 'react'\r\nimport {IBrief, Icontent, Iprops} from '../interface/document'\r\nimport Button from '../../components/Button/button'\r\nimport Icon from '../../components/Icon'\r\nimport Table from '../../components/Table'\r\nimport Divider from '../../components/Divider'\r\nimport {Row,Col} from '../../components/Grid'\r\nconst ButtonPage:React.FC = ()=>{ \r\n    const brief:IBrief={\r\n        introduce:<>\r\n        <h1>Grid栅格</h1>\r\n        <p>24 栅格系统。</p>\r\n        \r\n        <h2>概述</h2>\r\n        <div>\r\n            <p>布局的栅格化系统，我们是基于行（row）和列（col）来定义信息区块的外部框架，以保证页面的每个区域能够稳健地排布起来。下面简单介绍一下它的工作原理：</p>\r\n            <ul>\r\n                <li>\r\n                    <p>通过 row 在水平方向建立一组 column（简写 col）。</p>\r\n                </li>\r\n                <li>\r\n                    <p>你的内容应当放置于 col 内，并且，只有 col 可以作为 row 的直接元素。</p>\r\n                </li>\r\n                <li>\r\n                    <p>栅格系统中的列是指 1 到 24 的值来表示其跨越的范围。例如，三个等宽的列可以使用 <Col span={8} /> 来创建。</p>\r\n                </li>\r\n                <li>\r\n                    <p>如果一个 row 中的 col 总和超过 24，那么多余的 col 会作为一个整体另起一行排列。</p>\r\n                </li>\r\n            </ul>\r\n            <p>我们的栅格化系统基于 Flex 布局，允许子元素在父节点内的水平对齐方式 - 居左、居中、居右、等宽排列、分散排列。子元素与子元素之间，支持顶部对齐、垂直居中对齐、底部对齐的方式。同时，支持使用 order 来定义元素的排列顺序。</p>\r\n            <p>布局是基于 24 栅格来定义每一个『盒子』的宽度，但不拘泥于栅格。</p>\r\n        </div>\r\n        <h2>代码演示</h2>\r\n        </>\r\n    }\r\n    const gutterStyle = { background: '#0092ff', padding: '8px 0' };\r\n    const boxStyle = {background:\"rgba(128, 128, 128, 0.08)\"}\r\n    const height_100 = {height:\"100px\",lineHeight:\"100px\"}\r\n    const height_50 = {height:\"50px\",lineHeight:\"50px\"}\r\n    const height_120 = {height:\"160px\",lineHeight:\"160px\"}\r\n    const height_80 = {height:\"80px\",lineHeight:\"80px\"}\r\n    const items:Icontent[]=[\r\n//span\r\n        {\r\n            id:1, \r\n            col:1,\r\n            demo:<div>\r\n                    <Row>\r\n                        <Col span={24}>col-24</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={12}>col-12</Col>\r\n                        <Col span={12}>col-12</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={8}>col-8</Col>\r\n                        <Col span={8}>col-8</Col>\r\n                        <Col span={8}>col-8</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={6}>col-6</Col>\r\n                        <Col span={6}>col-6</Col>\r\n                        <Col span={6}>col-6</Col>\r\n                        <Col span={6}>col-6</Col>\r\n                    </Row>\r\n                </div>, \r\n            title:\"基础栅格\",\r\n            description:`从堆叠到水平排列。\r\n            使用单一的一组 Row 和 Col 栅格组件，就可以创建一个基本的栅格系统，所有列（Col）必须放在 Row 内。`,\r\n            code:\r\n`\r\nimport { Row, Col } from 'sxdui';\r\n<Row>\r\n    <Col span={24}>col-24</Col>\r\n</Row>\r\n<Row>\r\n    <Col span={12}>col-12</Col>\r\n    <Col span={12}>col-12</Col>\r\n</Row>\r\n<Row>\r\n    <Col span={8}>col-8</Col>\r\n    <Col span={8}>col-8</Col>\r\n    <Col span={8}>col-8</Col>\r\n</Row>\r\n<Row>\r\n    <Col span={6}>col-6</Col>\r\n    <Col span={6}>col-6</Col>\r\n    <Col span={6}>col-6</Col>\r\n    <Col span={6}>col-6</Col>\r\n</Row>\r\n`\r\n        },\r\n//gutter\r\n        {\r\n            id:2,\r\n            demo:<div>\r\n                    <Divider orientation=\"left\">Vertical</Divider>\r\n                    <Row gutter={16}>\r\n                        <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n                        <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n                        <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n                        <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n                    </Row>\r\n                    <Divider orientation=\"left\">Responsive</Divider>\r\n                    <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32, xl: 64, xxl: 64 }}>\r\n                        <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n                        <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n                        <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n                        <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n                    </Row>\r\n                    <Divider orientation=\"left\">Vertical</Divider>\r\n                    <Row gutter={[16,24]}>\r\n                        <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n                        <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n                        <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n                        <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n                        <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n                        <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n                        <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n                        <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n                    </Row>\r\n                </div>, \r\n            title:\"区块间隔\",\r\n            description:`栅格常常需要和间隔进行配合，你可以使用 Row 的 gutter 属性，我们推荐使用 (16+8n)px 作为栅格间隔(n 是自然数)。\r\n\r\n            如果要支持响应式，可以写成 { xs: 8, sm: 16, md: 24, lg: 32 }。\r\n            \r\n            如果需要垂直间距，可以写成数组形式 [水平间距, 垂直间距] [16, { xs: 8, sm: 16, md: 24, lg: 32 }]。`,\r\n            code:\r\n`\r\nimport { Row, Col, Divider } from 'sxdui';\r\nconst gutterStyle = { background: '#0092ff', padding: '8px 0' };\r\n\r\n<Divider orientation=\"left\">Vertical</Divider>\r\n<Row gutter={16}>\r\n    <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n    <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n    <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n    <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n</Row>\r\n<Divider orientation=\"left\">Responsive</Divider>\r\n<Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32, xl: 64, xxl: 64 }}>\r\n    <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n    <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n    <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n    <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n</Row>\r\n<Divider orientation=\"left\">Vertical</Divider>\r\n<Row gutter={[16,24]}>\r\n    <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n    <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n    <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n    <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n    <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n    <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n    <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n    <Col span={6}><div style={gutterStyle}>col-6</div></Col>\r\n</Row>\r\n`\r\n        },\r\n//offset\r\n        {\r\n            id:3,\r\n            demo:<div>\r\n                    <Row>\r\n                        <Col span={8}>col-8</Col>\r\n                        <Col span={8} offset={8}>col-8</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={6} offset={6}>col-6 col-offset-6</Col>\r\n                        <Col span={6} offset={6}>col-6 col-offset-6</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={12} offset={6}>col-12 col-offset-6</Col>\r\n                    </Row>\r\n                </div>, \r\n            title:\"左右偏移\",\r\n            description:`使用 offset 可以将列向右侧偏。例如，offset={4} 将元素向右侧偏移了 4 个列（column）的宽度。`,\r\n            code:\r\n`\r\nimport { Row, Col } from 'sxdui';\r\n<Row>\r\n    <Col span={8}>col-8</Col>\r\n    <Col span={8} offset={8}>col-8</Col>\r\n</Row>\r\n<Row>\r\n    <Col span={6} offset={6}>col-6 col-offset-6</Col>\r\n    <Col span={6} offset={6}>col-6 col-offset-6</Col>\r\n</Row>\r\n<Row>\r\n    <Col span={12} offset={6}>col-12 col-offset-6</Col>\r\n</Row>\r\n`\r\n        },\r\n//justify\r\n        {\r\n            id:4,\r\n            demo:<div>\r\n                    <Divider orientation=\"left\">start</Divider>\r\n                    <Row style={boxStyle} justify=\"start\">\r\n                        <Col span={4}>col-4</Col>\r\n                        <Col span={4}>col-4</Col>\r\n                        <Col span={4}>col-4</Col>\r\n                        <Col span={4}>col-4</Col>\r\n                    </Row>\r\n                    <Divider orientation=\"left\">center</Divider>\r\n                    <Row style={boxStyle} justify=\"center\">\r\n                        <Col span={4}>col-4</Col>\r\n                        <Col span={4}>col-4</Col>\r\n                        <Col span={4}>col-4</Col>\r\n                        <Col span={4}>col-4</Col>\r\n                    </Row>\r\n                    <Divider orientation=\"left\">end</Divider>\r\n                    <Row style={boxStyle} justify=\"end\">\r\n                        <Col span={4}>col-4</Col>\r\n                        <Col span={4}>col-4</Col>\r\n                        <Col span={4}>col-4</Col>\r\n                        <Col span={4}>col-4</Col>\r\n                    </Row>\r\n                    <Divider orientation=\"left\">space-between</Divider>\r\n                    <Row style={boxStyle} justify=\"space-between\">\r\n                        <Col span={4}>col-4</Col>\r\n                        <Col span={4}>col-4</Col>\r\n                        <Col span={4}>col-4</Col>\r\n                        <Col span={4}>col-4</Col>\r\n                    </Row>\r\n                    <Divider orientation=\"left\">space-around</Divider>\r\n                    <Row style={boxStyle} justify=\"space-around\">\r\n                        <Col span={4}>col-4</Col>\r\n                        <Col span={4}>col-4</Col>\r\n                        <Col span={4}>col-4</Col>\r\n                        <Col span={4}>col-4</Col>\r\n                    </Row>\r\n                </div>, \r\n            title:\"排版\",\r\n            description:`子元素根据不同的值 start,center,end,space-between,space-around，分别定义其在父节点里面的排版方式。`,\r\n            code:\r\n`\r\nimport { Row, Col, Divider } from 'sxdui';\r\nconst boxStyle = {background:\"rgba(128, 128, 128, 0.08)\"}\r\n\r\n<Divider orientation=\"left\">start</Divider>\r\n<Row style={boxStyle} justify=\"start\">\r\n    <Col span={4}>col-4</Col>\r\n    <Col span={4}>col-4</Col>\r\n    <Col span={4}>col-4</Col>\r\n    <Col span={4}>col-4</Col>\r\n</Row>\r\n<Divider orientation=\"left\">center</Divider>\r\n<Row style={boxStyle} justify=\"center\">\r\n    <Col span={4}>col-4</Col>\r\n    <Col span={4}>col-4</Col>\r\n    <Col span={4}>col-4</Col>\r\n    <Col span={4}>col-4</Col>\r\n</Row>\r\n<Divider orientation=\"left\">end</Divider>\r\n<Row style={boxStyle} justify=\"end\">\r\n    <Col span={4}>col-4</Col>\r\n    <Col span={4}>col-4</Col>\r\n    <Col span={4}>col-4</Col>\r\n    <Col span={4}>col-4</Col>\r\n</Row>\r\n<Divider orientation=\"left\">space-between</Divider>\r\n<Row style={boxStyle} justify=\"space-between\">\r\n    <Col span={4}>col-4</Col>\r\n    <Col span={4}>col-4</Col>\r\n    <Col span={4}>col-4</Col>\r\n    <Col span={4}>col-4</Col>\r\n</Row>\r\n<Divider orientation=\"left\">space-around</Divider>\r\n<Row style={boxStyle} justify=\"space-around\">\r\n    <Col span={4}>col-4</Col>\r\n    <Col span={4}>col-4</Col>\r\n    <Col span={4}>col-4</Col>\r\n    <Col span={4}>col-4</Col>\r\n</Row>\r\n`\r\n        },\r\n//align\r\n        {\r\n            id:5,\r\n            demo:<div>\r\n                    <Divider orientation=\"left\">top</Divider>\r\n                    <Row style={boxStyle} justify=\"center\" align=\"top\">\r\n                        <Col span={4}><p style={height_100}>col-4</p></Col>\r\n                        <Col span={4}><p style={height_50}>col-4</p></Col>\r\n                        <Col span={4}><p style={height_120}>col-4</p></Col>\r\n                        <Col span={4}><p style={height_80}>col-4</p></Col>\r\n                    </Row>\r\n                    <Divider orientation=\"left\">middle</Divider>\r\n                    <Row style={boxStyle} justify=\"center\" align=\"middle\">\r\n                        <Col span={4}><p style={height_100}>col-4</p></Col>\r\n                        <Col span={4}><p style={height_50}>col-4</p></Col>\r\n                        <Col span={4}><p style={height_120}>col-4</p></Col>\r\n                        <Col span={4}><p style={height_80}>col-4</p></Col>\r\n                    </Row>\r\n                    <Divider orientation=\"left\">bottom</Divider>\r\n                    <Row style={boxStyle} justify=\"center\" align=\"bottom\">\r\n                        <Col span={4}><p style={height_100}>col-4</p></Col>\r\n                        <Col span={4}><p style={height_50}>col-4</p></Col>\r\n                        <Col span={4}><p style={height_120}>col-4</p></Col>\r\n                        <Col span={4}><p style={height_80}>col-4</p></Col>\r\n                    </Row>\r\n                </div>, \r\n            title:\"对齐\",\r\n            description:`子元素垂直对齐。`,\r\n            code:\r\n`\r\nimport { Row, Col, Divider } from 'sxdui';\r\nconst boxStyle = {background:\"rgba(128, 128, 128, 0.08)\"}\r\nconst height_100 = {height:\"100px\",lineHeight:\"100px\"}\r\nconst height_50 = {height:\"50px\",lineHeight:\"50px\"}\r\nconst height_120 = {height:\"160px\",lineHeight:\"160px\"}\r\nconst height_80 = {height:\"80px\",lineHeight:\"80px\"}\r\n\r\n<Divider orientation=\"left\">top</Divider>\r\n<Row style={boxStyle} justify=\"center\" align=\"top\">\r\n    <Col span={4}><p style={height_100}>col-4</p></Col>\r\n    <Col span={4}><p style={height_50}>col-4</p></Col>\r\n    <Col span={4}><p style={height_120}>col-4</p></Col>\r\n    <Col span={4}><p style={height_80}>col-4</p></Col>\r\n</Row>\r\n<Divider orientation=\"left\">middle</Divider>\r\n<Row style={boxStyle} justify=\"center\" align=\"middle\">\r\n    <Col span={4}><p style={height_100}>col-4</p></Col>\r\n    <Col span={4}><p style={height_50}>col-4</p></Col>\r\n    <Col span={4}><p style={height_120}>col-4</p></Col>\r\n    <Col span={4}><p style={height_80}>col-4</p></Col>\r\n</Row>\r\n<Divider orientation=\"left\">bottom</Divider>\r\n<Row style={boxStyle} justify=\"center\" align=\"bottom\">\r\n    <Col span={4}><p style={height_100}>col-4</p></Col>\r\n    <Col span={4}><p style={height_50}>col-4</p></Col>\r\n    <Col span={4}><p style={height_120}>col-4</p></Col>\r\n    <Col span={4}><p style={height_80}>col-4</p></Col>\r\n</Row>\r\n`\r\n        },\r\n//order\r\n        {\r\n            id:6,\r\n            demo:<div>\r\n                    <Row>\r\n                        <Col span={6} order={4}>col-order-1</Col>\r\n                        <Col span={6} order={3}>col-order-2</Col>\r\n                        <Col span={6} order={2}>col-order-3</Col>\r\n                        <Col span={6} order={1}>col-order-4</Col>\r\n                    </Row>\r\n                </div>, \r\n            title:\"排序\",\r\n            description:`通过 order 来改变元素的排序`,\r\n            code:\r\n`\r\nimport { Row, Col } from 'sxdui';\r\n<Row>\r\n    <Col span={6} order={4}>col-order-1</Col>\r\n    <Col span={6} order={3}>col-order-2</Col>\r\n    <Col span={6} order={2}>col-order-3</Col>\r\n    <Col span={6} order={1}>col-order-4</Col>\r\n</Row>\r\n`\r\n        },\r\n//flex\r\n        {\r\n            id:7,\r\n            col:1,\r\n            demo:<div>\r\n                    <Divider orientation=\"left\">Percentage columns</Divider>\r\n                    <Row>\r\n                        <Col flex={2}>2 / 5</Col>\r\n                        <Col flex={3}>3 / 5</Col>\r\n                    </Row>\r\n                    <h5>Fill rest</h5>\r\n                    <Row>\r\n                        <Col flex=\"100px\">100px</Col>\r\n                        <Col flex=\"auto\">Fill Rest</Col>\r\n                    </Row>\r\n                    <Divider orientation=\"left\">Raw flex style</Divider>\r\n                    <Row>\r\n                        <Col flex=\"1 1 200px\">1 1 200px</Col>\r\n                        <Col flex=\"0 1 300px\">0 1 300px</Col>\r\n                    </Row>\r\n                </div>, \r\n            title:\"Flex填充\",\r\n            description:`Col 提供 flex 属性以支持填充。`,\r\n            code:\r\n`\r\nimport { Row, Col, Divider } from 'sxdui';\r\n<Divider orientation=\"left\">Percentage columns</Divider>\r\n<Row>\r\n    <Col flex={2}>2 / 5</Col>\r\n    <Col flex={3}>3 / 5</Col>\r\n</Row>\r\n<h5>Fill rest</h5>\r\n<Row>\r\n    <Col flex=\"100px\">100px</Col>\r\n    <Col flex=\"auto\">Fill Rest</Col>\r\n</Row>\r\n<Divider orientation=\"left\">Raw flex style</Divider>\r\n<Row>\r\n    <Col flex=\"1 1 200px\">1 1 200px</Col>\r\n    <Col flex=\"0 1 300px\">0 1 300px</Col>\r\n</Row>\r\n`\r\n        },\r\n        {\r\n            id:8,\r\n            \r\n            demo:<div>\r\n                    <Row>\r\n                        <Col xs={2} sm={4} md={6} lg={8} xl={10}>Col</Col>\r\n                        <Col xs={20} sm={16} md={12} lg={8} xl={4}>Col</Col>\r\n                        <Col xs={2} sm={4} md={6} lg={8} xl={10}>Col</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={{ span: 5, offset: 1 }} lg={{ span: 6, offset: 2 }}>Col</Col>\r\n                        <Col xs={{ span: 11, offset: 1 }} lg={{ span: 6, offset: 2 }}>Col</Col>\r\n                        <Col xs={{ span: 5, offset: 1 }} lg={{ span: 6, offset: 2 }}>Col</Col>\r\n                    </Row>\r\n                </div>, \r\n            title:\"响应式布局\",\r\n            description:`预设六个响应尺寸：xs sm md lg xl xxl。\r\n            span pull push offset order 属性可以通过内嵌到 xs sm md lg xl xxl 属性中来使用。\r\n            其中 xs={6} 相当于 xs={{ span: 6 }}。`,\r\n            code:\r\n`\r\nimport { Row, Col } from 'sxdui';\r\n<Row>\r\n    <Col xs={2} sm={4} md={6} lg={8} xl={10}>Col</Col>\r\n    <Col xs={20} sm={16} md={12} lg={8} xl={4}>Col</Col>\r\n    <Col xs={2} sm={4} md={6} lg={8} xl={10}>Col</Col>\r\n</Row>\r\n<Row>\r\n    <Col xs={{ span: 5, offset: 1 }} lg={{ span: 6, offset: 2 }}>Col</Col>\r\n    <Col xs={{ span: 11, offset: 1 }} lg={{ span: 6, offset: 2 }}>Col</Col>\r\n    <Col xs={{ span: 5, offset: 1 }} lg={{ span: 6, offset: 2 }}>Col</Col>\r\n</Row>\r\n`\r\n        },\r\n    ]\r\n    const data_col = [\r\n        {\r\n            key:1,\r\n            arguments: 'span',\r\n            brief: \"栅格占位格数，为 0 时相当于 display: none\",\r\n            type: 'number',\r\n            default:\"-\"\r\n          },\r\n          {\r\n            key:2,\r\n            arguments: 'offset',\r\n            brief: \"栅格左侧的间隔格数，间隔内不可以有栅格\",\r\n            type: 'number',\r\n            default:\"0\"\r\n          },\r\n          {\r\n            key:3,\r\n            arguments: 'flex',\r\n            brief: \"水平排列方式\",\r\n            type: 'number',\r\n            default:\"start\"\r\n          },\r\n          {\r\n            key:4,\r\n            arguments: 'order',\r\n            brief: \"栅格顺序\",\r\n            type: 'number',\r\n            default:\"0\"\r\n          },\r\n          {\r\n            key:5,\r\n            arguments: 'xs',\r\n            brief: \"屏幕 < 576px 响应式栅格，可为栅格数或一个包含其他属性的对象\",\r\n            type: 'number | object',\r\n            default:\"0\"\r\n          },\r\n          {\r\n            key:6,\r\n            arguments: 'sm',\r\n            brief: \"屏幕 ≥ 576px 响应式栅格，可为栅格数或一个包含其他属性的对象\",\r\n            type: 'number | object',\r\n            default:\"-\"\r\n          },\r\n          {\r\n            key:7,\r\n            arguments: 'md',\r\n            brief: \"屏幕 ≥ 768px 响应式栅格，可为栅格数或一个包含其他属性的对象\",\r\n            type: 'number | object',\r\n            default:\"-\"\r\n          },\r\n          {\r\n            key:8,\r\n            arguments: 'lg',\r\n            brief: \"屏幕 ≥ 992px 响应式栅格，可为栅格数或一个包含其他属性的对象\",\r\n            type: 'number | object',\r\n            default:\"-\"\r\n          },\r\n          {\r\n            key:9,\r\n            arguments: 'xl',\r\n            brief: \"屏幕 ≥ 1200px 响应式栅格，可为栅格数或一个包含其他属性的对象\",\r\n            type: 'number | object',\r\n            default:\"-\"\r\n          },\r\n          {\r\n            key:10,\r\n            arguments: 'xxl',\r\n            brief: \"屏幕 ≥ 1600px 响应式栅格，可为栅格数或一个包含其他属性的对象\",\r\n            type: 'number | object',\r\n            default:\"-\"\r\n          },\r\n    ]\r\n    const data_row=[\r\n        {\r\n          key:1,\r\n          arguments: 'gutter',\r\n          brief: \"栅格间隔，可以写成像素值或支持响应式的对象写法来设置水平间隔 { xs: 8, sm: 16, md: 24}。或者使用数组形式同时设置 [水平间距, 垂直间距]\",\r\n          type: 'number | object | array',\r\n          default:\"0\"\r\n        },\r\n        {\r\n          key:2,\r\n          arguments: 'align',\r\n          brief: \"垂直对齐方式\",\r\n          type: 'top | middle | bottom',\r\n          default:\"top\"\r\n        },\r\n        {\r\n          key:3,\r\n          arguments: 'justify',\r\n          brief: \"水平排列方式\",\r\n          type: 'start | end | center | space-around | space-between',\r\n          default:\"start\"\r\n        },\r\n        /*{\r\n          key:4,\r\n          arguments: 'wrap',\r\n          brief: \"是否自动换行\",\r\n          type: 'boolean',\r\n          default:\"true\"\r\n        },*/\r\n     ];\r\n     const columns=[\r\n        {\r\n            title: '参数',\r\n            dataIndex: 'arguments'\r\n        },\r\n        {\r\n            title: '说明',\r\n            dataIndex: 'brief'\r\n        },\r\n        {\r\n            title: '类型',\r\n            dataIndex: 'type'\r\n        },\r\n        {\r\n            title: '默认值',\r\n            dataIndex: 'default',\r\n        }\r\n    ];\r\n    const api = \r\n        <div>\r\n            <h2>Row</h2>\r\n            <Table data={data_row} columns={columns} />\r\n            <h2>Col</h2>\r\n            <Table data={data_col} columns={columns} />\r\n        </div>\r\n      \r\n      \r\n    const document:Iprops = {\r\n        brief:brief,\r\n        content:items,\r\n        api:api\r\n    }\r\n    return (<Document document={document}/>)\r\n}\r\nexport default ButtonPage","F:\\react\\ts-react\\src\\components\\Grid\\index.tsx",["400","401"],"import React,{useEffect, useState} from 'react';\r\nimport {initData,getGutter,getResponsiveGrid} from './hook'\r\nimport classNames from 'classnames';\r\nimport {ThemeContext} from '../../App'\r\ninterface IRow{\r\n    gutter?:any;\r\n    align?:'top' | 'middle' | 'bottom';\r\n    justify?:'start' | 'end' | 'center' | 'space-around' | 'space-between';\r\n    wrap?:boolean;\r\n    children:any;\r\n    style?:object;\r\n}\r\ninterface ICol{\r\n    span?:number;\r\n    order?:number;\r\n    flex?:string | number;\r\n    offset?:number;\r\n    style?:object;\r\n    xs?:number|object;\r\n    sm?:number|object;\r\n    md?:number|object;\r\n    lg?:number|object;\r\n    xl?:number|object;\r\n    xxl?:number|object;\r\n}\r\n\r\nconst Row:React.FC<IRow> = (props)=>{\r\n    const { gutter, justify=\"start\", align=\"top\", style={} } = props\r\n    const [offsetWidth,setOffetWidth] = useState(document.body.offsetWidth)\r\n    const [gridData,setGridData] = useState(initData(props.children,offsetWidth,gutter))\r\n    const fn = ()=>{\r\n        setOffetWidth(document.body.offsetWidth)\r\n        removeListener()\r\n    }\r\n    const addListener = ()=>{\r\n        window.addEventListener(\"resize\",fn)\r\n    }\r\n    const removeListener = ()=>{\r\n        window.removeEventListener(\"resize\",fn);\r\n    }\r\n    useEffect(()=>{\r\n        addListener()\r\n        setGridData(gridData.map((item:any)=>{\r\n            const {xs, sm, md, lg, xl,xxl}=item.responsive\r\n            const res = getResponsiveGrid(offsetWidth,item.responsive) || { span:item.span,offset:item.offset,order:item.order }\r\n            if(xs || sm || md || lg || xl || xxl){\r\n                return {\r\n                    ...item,\r\n                    span:res.span,\r\n                    offset:res.offset,\r\n                }\r\n            }\r\n            if(Object.prototype.toString.call(gutter) === '[object Object]'){\r\n                return {...item,gutter:getGutter(gutter,offsetWidth)}\r\n            }  \r\n            return item\r\n        }))\r\n    },[offsetWidth])\r\n    \r\n    //console.log(gutter,gridData)\r\n    let row_classes = classNames(\"sxd-row\",{\r\n        [`sxd-row-${justify}`]:justify,\r\n        [`sxd-row-${align}`]:align\r\n    })\r\n    return (\r\n        <div className={row_classes} style={style}>\r\n            { gridData.map((item:any,index:number)=>{\r\n                let col_classes = classNames(\"sxd-col\",{\r\n                    \"gutter-row\":item.gutter,\r\n                    [`sxd-col-${item.span}`]:item.span,\r\n                    [`sxd-col-offset-${item.offset}`]:item.offset,\r\n                    [item.justify]:item.justify,\r\n                    [item.align]:item.align\r\n                })\r\n                const gutter = item.gutter ? {padding:`${item.gutter.vertical!==0?item.gutter.vertical/2:0}px ${item.gutter.horizontal!==0?item.gutter.horizontal/2:0}px`} : {}\r\n                const flex = item.flex ? {flex:item.flex} : {}\r\n                const order = item.order ? {order:item.order} : {}\r\n                let style = Object.assign({},gutter,flex,order,item.style)\r\n                return (<div key={index} className={col_classes} style={style}>{item.node}</div>)\r\n            }) }\r\n        </div>\r\n    )\r\n}\r\nconst Col:React.FC<ICol> = ()=>{\r\n    return (<></>)\r\n}\r\nexport { Row,Col }","F:\\react\\ts-react\\src\\components\\Grid\\hook.tsx",[],"F:\\react\\ts-react\\src\\components\\Divider\\index.tsx",["402","403"],"import React,{useEffect, useState} from 'react';\r\nimport classNames from 'classnames';\r\ninterface IDivider{\r\n    orientation?:\"left\" | \"right\" | \"middle\";\r\n    dashed?:boolean;\r\n    children?:any;\r\n}\r\nconst Divider:React.FC<IDivider> = (props:IDivider)=>{\r\n    const { orientation, dashed, children } = props\r\n    const classes = classNames(\"sxd-divider\",{\r\n        \"sxd-divider-dashed\":dashed,\r\n        \"sxd-divider-with-text\":orientation,\r\n        [`sxd-divider-with-text-${orientation}`]:orientation\r\n    })\r\n    const dividerContent=()=>{\r\n        if(children){\r\n            return (\r\n                <span className=\"sxd-divider-inner-text\">{children}</span>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes}>\r\n            {dividerContent()}\r\n        </div>\r\n    )\r\n}\r\nexport default Divider","F:\\react\\ts-react\\src\\site\\pages\\Divider.tsx",["404","405","406","407","408"],"import Document from '../layout/content/Document'\r\nimport React,{useState} from 'react'\r\nimport {IBrief, Icontent, Iprops} from '../interface/document'\r\nimport Button from '../../components/Button/button'\r\nimport Icon from '../../components/Icon'\r\nimport Table from '../../components/Table'\r\nimport Divider from '../../components/Divider'\r\nimport {Row,Col} from '../../components/Grid'\r\nconst DividerPage:React.FC = ()=>{ \r\n    const brief:IBrief={\r\n        introduce:<>\r\n        <h1>Divider分割线</h1>\r\n        <p>区隔内容的分割线</p>\r\n        <h2>何时使用</h2>\r\n        <div>\r\n            <ul>\r\n                <li>\r\n                    <p>对不同章节的文本段落进行分割。</p>\r\n                </li>\r\n                <li>\r\n                    <p>对行内文字/链接进行分割，例如表格的操作列。</p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <h2>代码演示</h2>\r\n        </>\r\n    }\r\n    const items:Icontent[]=[\r\n//span\r\n        {\r\n            id:1, \r\n            demo:<div>\r\n                    <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\n                    probare, quae sunt a te dicta? Refert tamen, quo modo.\r\n                    </p>\r\n                    <Divider />\r\n                    <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\n                    probare, quae sunt a te dicta? Refert tamen, quo modo.\r\n                    </p>\r\n                    <Divider dashed />\r\n                    <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\n                    probare, quae sunt a te dicta? Refert tamen, quo modo.\r\n                    </p>\r\n                </div>, \r\n            title:\"水平分割线\",\r\n            description:`默认为水平分割线，可在中间加入文字。`,\r\n            code:\r\n`\r\nimport { Divider } from 'sxdui';\r\n<p>\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\nprobare, quae sunt a te dicta? Refert tamen, quo modo.\r\n</p>\r\n<Divider />\r\n<p>\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\nprobare, quae sunt a te dicta? Refert tamen, quo modo.\r\n</p>\r\n<Divider dashed />\r\n<p>\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\nprobare, quae sunt a te dicta? Refert tamen, quo modo.\r\n</p>\r\n`\r\n        },\r\n        {\r\n            id:2,\r\n            demo:<div>\r\n                    <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\n                    probare, quae sunt a te dicta? Refert tamen, quo modo.\r\n                    </p>\r\n                    <Divider orientation=\"middle\">Text</Divider>\r\n                    <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\n                    probare, quae sunt a te dicta? Refert tamen, quo modo.\r\n                    </p>\r\n                    <Divider orientation=\"left\">Left Text</Divider>\r\n                    <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\n                    probare, quae sunt a te dicta? Refert tamen, quo modo.\r\n                    </p>\r\n                    <Divider orientation=\"right\">Right Text</Divider>\r\n                    <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\n                    probare, quae sunt a te dicta? Refert tamen, quo modo.\r\n                    </p>\r\n                </div>, \r\n            title:\"带文字的分割线\",\r\n            description:`分割线中带有文字，可以用 orientation 指定文字位置。`,\r\n            code:\r\n`\r\nimport { Divider } from 'sxdui';\r\n<p>\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\nprobare, quae sunt a te dicta? Refert tamen, quo modo.\r\n</p>\r\n<Divider orientation=\"middle\">Text</Divider>\r\n<p>\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\nprobare, quae sunt a te dicta? Refert tamen, quo modo.\r\n</p>\r\n<Divider orientation=\"left\">Left Text</Divider>\r\n<p>\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\nprobare, quae sunt a te dicta? Refert tamen, quo modo.\r\n</p>\r\n<Divider orientation=\"right\">Right Text</Divider>\r\n<p>\r\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista\r\nprobare, quae sunt a te dicta? Refert tamen, quo modo.\r\n</p>\r\n`\r\n        }\r\n    ]\r\n    const data = [\r\n        {\r\n            key:1,\r\n            arguments: 'dashed',\r\n            brief: \"是否虚线\",\r\n            type: 'boolean',\r\n            default:\"false\"\r\n          },\r\n          {\r\n            key:2,\r\n            arguments: 'orientation',\r\n            brief: \"分割线标题的位置\",\r\n            type: 'left | right | center',\r\n            default:\"-\"\r\n          },\r\n    ]\r\n     const columns=[\r\n        {\r\n            title: '参数',\r\n            dataIndex: 'arguments'\r\n        },\r\n        {\r\n            title: '说明',\r\n            dataIndex: 'brief'\r\n        },\r\n        {\r\n            title: '类型',\r\n            dataIndex: 'type'\r\n        },\r\n        {\r\n            title: '默认值',\r\n            dataIndex: 'default',\r\n        }\r\n    ];\r\n    const api = \r\n        <div>\r\n            <h2>Api</h2>\r\n            <Table data={data} columns={columns} />\r\n        </div>\r\n      \r\n      \r\n    const document:Iprops = {\r\n        brief:brief,\r\n        content:items,\r\n        api:api\r\n    }\r\n    return (<Document document={document}/>)\r\n}\r\nexport default DividerPage","F:\\react\\ts-react\\src\\site\\pages\\Checkbox.tsx",["409","410","411","412","413"],"import Document from '../layout/content/Document'\r\nimport React,{useState} from 'react'\r\nimport {IBrief, Icontent, Iprops} from '../interface/document'\r\nimport Button from '../../components/Button/button'\r\nimport {Select,Option} from '../../components/Select'\r\nimport {Checkbox ,CheckboxGroup} from '../../components/Checkbox'\r\nimport Icon from '../../components/Icon'\r\nimport Divider from '../../components/Divider'\r\nimport Table from '../../components/Table'\r\nconst CheckboxPage:React.FC = ()=>{\r\n    const brief:IBrief={\r\n        introduce:<>\r\n        <h1>Checkbox 多选框</h1>\r\n        <p>多选框。</p>\r\n        <h2>何时使用</h2>\r\n        <div>\r\n            <ul>\r\n                <li>\r\n                    <p>在一组可选项中进行多项选择时；</p>\r\n                </li>\r\n                <li>\r\n                    <p>单独使用可以表示两种状态之间的切换，和 switch 类似。区别在于切换 switch 会直接触发状态改变，而 checkbox 一般用于状态标记，需要和提交操作配合。</p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <h2>代码演示</h2>\r\n        </>\r\n    }\r\n    const [checked,setChecked] = useState(false)\r\n    const [checked2,setChecked2] = useState(false)\r\n    const [disabled,setDisabled] = useState(false)\r\n    const [checkedList, setCheckedList] = useState(['Apple']);\r\n    const [indeterminate, setIndeterminate] = React.useState(true);\r\n    const [checkAll, setCheckAll] = React.useState(false);\r\n  const plainOptions:any = ['Apple', 'Pear', 'Orange'];\r\n    const valueChange=(val:any)=>{\r\n        setCheckedList(val ? plainOptions : []);\r\n        setIndeterminate(false);\r\n        setCheckAll(val)\r\n    }\r\n    const onChange=(val:any)=>{\r\n        console.log(val)\r\n        setIndeterminate(!!val.length && val.length < plainOptions.length);\r\n        setCheckedList(val);\r\n        setCheckAll(val.length === plainOptions.length)\r\n    }\r\nconst options = [\r\n  { label: 'Apple', value: 'Apple' },\r\n  { label: 'Pear', value: 'Pear' },\r\n  { label: 'Orange', value: 'Orange' },\r\n];\r\nconst optionsWithDisabled = [\r\n  { label: 'Apple', value: 'Apple' },\r\n  { label: 'Pear', value: 'Pear' },\r\n  { label: 'Orange', value: 'Orange', disabled: true },\r\n];\r\n    const items:Icontent[]=[\r\n        {\r\n            id:1,\r\n            demo:<div>\r\n                    <Checkbox onChange={(value:string)=>console.log(value)}>Checkbox</Checkbox>\r\n                </div>,\r\n            title:\"基本使用\",\r\n            description:\"简单的 checkbox。\",\r\n            code:\r\n`\r\nimport { Checkbox } from 'sxdui'\r\n<Checkbox onChange={(value:string)=>console.log(value)}>Checkbox</Checkbox>\r\n`\r\n        },\r\n        {\r\n            id:2,\r\n            demo:<div>\r\n                    <Checkbox defaultChecked={false} disabled />\r\n                    <br />\r\n                    <Checkbox defaultChecked disabled />\r\n                </div>,\r\n            title:\"不可用\",\r\n            description:\"checkbox 不可用。\",\r\n            code:\r\n`\r\nimport { Checkbox } from 'sxdui'\r\n<Checkbox defaultChecked={false} disabled />\r\n<br />\r\n<Checkbox defaultChecked disabled />\r\n`\r\n        },\r\n        {\r\n            id:3,\r\n            demo:<div>\r\n                    <Checkbox checked={checked} disabled={disabled}>checkbox</Checkbox>\r\n                    <Button type=\"primary\" size=\"small\" onClick={()=>setChecked(!checked)}>\r\n                        {checked ? 'Check' : 'Uncheck'}\r\n                    </Button>\r\n                    <Button type=\"primary\" size=\"small\" onClick={()=>setDisabled(!disabled)}>\r\n                        {disabled ? 'disabled' : 'abled'}\r\n                    </Button>\r\n                </div>,\r\n            title:\"受控的Checkbox\",\r\n            description:\"联动 checkbox。\",\r\n            code:\r\n`\r\nimport { Checkbox, Button } from 'sxdui'\r\nconst [checked,setChecked] = useState(false)\r\nconst [disabled,setDisabled] = useState(false)\r\nconst toggleChecked = ()=>{\r\n    setChecked(!checked)\r\n}\r\nconst toggleDisable = ()=>{\r\n    setDisabled(!disabled)\r\n}\r\n<Checkbox checked={checked} disabled={disabled}>checkbox</Checkbox>\r\n<Button type=\"primary\" size=\"small\" onClick={()=>setChecked(!checked)}>\r\n    {checked ? 'Check' : 'Uncheck'}\r\n</Button>\r\n<Button type=\"primary\" size=\"small\" onClick={()=>setDisabled(!disabled)}>\r\n    {disabled ? 'disabled' : 'abled'}\r\n</Button>\r\n`\r\n        },\r\n        \r\n        {\r\n            id:4,\r\n            demo:<div>\r\n                    <CheckboxGroup options={plainOptions} defaultValue={['Apple']} onChange={(v:any)=>console.log(v)}/>\r\n                    <br />\r\n                    <br />\r\n                    <CheckboxGroup options={options} defaultValue={['Pear']}/>\r\n                    <br />\r\n                    <br />\r\n                    <CheckboxGroup options={optionsWithDisabled} defaultValue={['Pear']}/>\r\n                </div>,\r\n            title:\"Checkbox 组\",\r\n            description:\"方便的从数组生成 Checkbox 组。\",\r\n            code:\r\n`\r\nimport { Checkbox } from 'sxdui'\r\nconst plainOptions = ['Apple', 'Pear', 'Orange'];\r\nconst options = [\r\n  { label: 'Apple', value: 'Apple' },\r\n  { label: 'Pear', value: 'Pear' },\r\n  { label: 'Orange', value: 'Orange' },\r\n];\r\nconst optionsWithDisabled = [\r\n  { label: 'Apple', value: 'Apple' },\r\n  { label: 'Pear', value: 'Pear' },\r\n  { label: 'Orange', value: 'Orange', disabled: false },\r\n];\r\n<CheckboxGroup options={plainOptions} defaultValue={['Apple']}/>\r\n<br />\r\n<br />\r\n<CheckboxGroup options={options} defaultValue={['Pear']}/>\r\n<br />\r\n<br />\r\n<CheckboxGroup options={optionsWithDisabled} defaultValue={['Pear']}/>\r\n`\r\n        },\r\n        {\r\n            id:5,\r\n            demo:<div>\r\n                    <Checkbox checked={checkAll} indeterminate={indeterminate} onChange={valueChange}>Check all</Checkbox>\r\n                    <Divider />\r\n                    <CheckboxGroup value={checkedList} options={plainOptions} defaultValue={['Apple',\"Pear\"]} onChange={onChange} />\r\n                </div>,\r\n            title:\"全选\",\r\n            description:\"全选效果\",\r\n            code:\r\n`\r\nimport { Checkbox, Divider } from 'sxdui'\r\nconst [checkedList, setCheckedList] = useState(['Apple']);\r\nconst [indeterminate, setIndeterminate] = React.useState(true);\r\nconst [checkAll, setCheckAll] = React.useState(false);\r\nconst plainOptions:any = ['Apple', 'Pear', 'Orange'];\r\nconst valueChange=(val:any)=>{\r\n    setCheckedList(val ? plainOptions : []);\r\n    setIndeterminate(false);\r\n    setCheckAll(val)\r\n}\r\nconst onChange=(val:any)=>{\r\n    setIndeterminate(!!val.length && val.length < plainOptions.length);\r\n    setCheckedList(val);\r\n    setCheckAll(val.length === plainOptions.length)\r\n}\r\n<Checkbox checked={checkAll} indeterminate={indeterminate} onChange={valueChange}>Check all</Checkbox>\r\n<Divider />\r\n<CheckboxGroup value={checkedList} options={plainOptions} defaultValue={['Apple',\"Pear\"]} onChange={onChange} />\r\n`\r\n        },\r\n    ];\r\n\r\n    const data=[\r\n        {\r\n          key:1,\r\n          arguments: 'checked',\r\n          brief: \"指定当前是否选中\",\r\n          type: 'boolean',\r\n          options: 'boolean',\r\n          default:\"false\"\r\n        },\r\n        {\r\n          key:2,\r\n          arguments: 'defaultChecked',\r\n          brief: \"初始是否选中\",\r\n          options: 'boolean',\r\n          default:\"false\"\r\n        },\r\n        {\r\n            key:3,\r\n            arguments: 'disabled',\r\n            brief: \"失效状态\",\r\n            options: 'boolean',\r\n          default:\"false\"\r\n          },\r\n          {\r\n            key:4,\r\n            arguments: 'indeterminate',\r\n            brief: \"设置 indeterminate 状态，只负责样式控制\",\r\n            options: 'boolean',\r\n            default:\"false\"\r\n          },\r\n          {\r\n            key:5,\r\n            arguments: 'onChange',\r\n            brief: \"变化时回调函数\",\r\n            options: 'function(val:boolean)',\r\n            default:\"-\"\r\n          },\r\n     ];\r\n     const data2=[\r\n        {\r\n            key:1,\r\n            arguments: 'defaultValue',\r\n            brief: \"默认选中的选项\",\r\n            type: 'string[]',\r\n            default:\"[]\"\r\n          },\r\n          {\r\n            key:2,\r\n            arguments: 'disabled',\r\n            brief: \"整组失效\",\r\n            options: 'boolean',\r\n            default:\"false\"\r\n          },\r\n          {\r\n              key:3,\r\n              arguments: 'options',\r\n              brief: \"指定可选项\",\r\n              options: 'string[] | Option[]',\r\n            default:\"[]\"\r\n            },\r\n            {\r\n              key:4,\r\n              arguments: 'value',\r\n              brief: \"设置 indeterminate 状态，只负责样式控制\",\r\n              options: 'string[]',\r\n              default:\"[]\"\r\n            },\r\n            {\r\n              key:5,\r\n              arguments: 'onChange',\r\n              brief: \"变化时回调函数\",\r\n              options: 'function(val:string[])',\r\n              default:\"-\"\r\n            },\r\n     ];\r\n     const columns=[\r\n        {\r\n            title: '参数',\r\n            dataIndex: 'arguments'\r\n        },\r\n        {\r\n            title: '说明',\r\n            dataIndex: 'brief'\r\n        },\r\n        {\r\n            title: '类型',\r\n            dataIndex: 'type'\r\n        },\r\n        {\r\n            title: '默认值',\r\n            dataIndex: 'default',\r\n        }\r\n    ];\r\n    const api = \r\n        <div>\r\n            <h2>Checkbox 参数</h2>\r\n            <Table data={data} columns={columns} />\r\n            <h2>Checkbox Group 参数</h2>\r\n            <Table data={data2} columns={columns} />\r\n        </div>\r\n      \r\n      \r\n    const document:Iprops = {\r\n        brief:brief,\r\n        content:items,\r\n        api:api\r\n    }\r\n    return (<Document document={document}/>)\r\n}\r\nexport default CheckboxPage","F:\\react\\ts-react\\src\\site\\pages\\Radio.tsx",["414","415","416","417","418"],"import Document from '../layout/content/Document'\r\nimport React,{useState} from 'react'\r\nimport {IBrief, Icontent, Iprops} from '../interface/document'\r\nimport Button from '../../components/Button/button'\r\nimport {Select,Option} from '../../components/Select'\r\n\r\nimport Icon from '../../components/Icon'\r\nimport Table from '../../components/Table'\r\nconst RadioPage:React.FC = ()=>{\r\n    const brief:IBrief={\r\n        introduce:<>\r\n        <h1>Select选择器</h1>\r\n        <p>下拉选择器。</p>\r\n        <h2>何时使用</h2>\r\n        <div>\r\n            <ul>\r\n                <li>\r\n                    <p>弹出一个下拉菜单给用户选择操作，用于代替原生的选择器，或者需要一个更优雅的多选器时。</p>\r\n                </li>\r\n                <li>\r\n                    <p>当选项少时（少于 5 项），建议直接将选项平铺，使用 Radio 是更好的选择。</p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <h2>代码演示</h2>\r\n        </>\r\n    }\r\n    const [loading,setLoading] = useState(false)\r\n    const valueChange=(val:any)=>{\r\n        console.log(val)\r\n    }\r\n    const items:Icontent[]=[\r\n        {\r\n            id:1,\r\n            demo:<div>\r\n                    <Select defaultValue=\"a10\">\r\n                        <Option value=\"a10\" label=\"label\">a10</Option>\r\n                        <Option value=\"b11\">b11</Option>\r\n                        <Option value=\"c12\">c12</Option>\r\n                        <Option value=\"d13\">d13</Option>\r\n                        <Option value=\"e14\">e14</Option>\r\n                    </Select>\r\n                </div>,\r\n            title:\"基本使用\",\r\n            description:\"单选，基本使用。\",\r\n            code:\r\n`\r\nimport {Select,Option} from 'sxdui'\r\n<div>\r\n    <Select defaultValue=\"a10\">\r\n        <Option value=\"a10\" label=\"label\">a10</Option>\r\n        <Option value=\"b11\">b11</Option>\r\n        <Option value=\"c12\">c12</Option>\r\n        <Option value=\"d13\">d13</Option>\r\n        <Option value=\"e14\">e14</Option>\r\n    </Select>\r\n</div>\r\n`\r\n        },\r\n        {\r\n            id:2,\r\n            demo:<div>\r\n                    <Select mode=\"multiple\" defaultValue={[\"a10\",\"b11\"]} clearable>\r\n                        <Option value=\"a10\" label=\"label\">a10</Option>\r\n                        <Option value=\"b11\">b11</Option>\r\n                        <Option value=\"c12\">c12</Option>\r\n                        <Option value=\"d13\">d13</Option>\r\n                        <Option value=\"e14\">e14</Option>\r\n                    </Select>\r\n                </div>,\r\n            title:\"多选\",\r\n            description:\"多选，从已有条目中选择\",\r\n            code:\r\n`\r\nimport {Select,Option} from 'sxdui'\r\n<div>\r\n    <Select mode=\"multiple\" defaultValue={[\"a10\",\"b11\"]} clearable>\r\n        <Option value=\"a10\" label=\"label\">a10</Option>\r\n        <Option value=\"b11\">b11</Option>\r\n        <Option value=\"c12\">c12</Option>\r\n        <Option value=\"d13\">d13</Option>\r\n        <Option value=\"e14\">e14</Option>\r\n    </Select>\r\n</div>\r\n`\r\n        },\r\n    ];\r\n\r\n    const data=[\r\n        {\r\n          key:1,\r\n          arguments: 'mode',\r\n          brief: \"设置 Select 的模式为多选\",\r\n          type: 'string',\r\n          options: 'multiple',\r\n          default:\"-\"\r\n        },\r\n        {\r\n          key:2,\r\n          arguments: 'defaultValue',\r\n          brief: \"指定默认选中的条目\",\r\n          type: 'string | string[] number | number[]',\r\n          default:\"-\"\r\n        },\r\n     ];\r\n     const data2=[\r\n        {\r\n          key:1,\r\n          arguments: 'value',\r\n          brief: \"默认根据此属性值进行筛选\",\r\n          type: 'string | number',\r\n          options: '',\r\n          default:\"-\"\r\n        },\r\n        {\r\n          key:2,\r\n          arguments: 'label',\r\n          brief: \"选中该 Option 后，Select 的 title\",\r\n          type: 'string',\r\n          options: '',\r\n          default:\"-\"\r\n        },\r\n     ];\r\n     const columns=[\r\n        {\r\n            title: '参数',\r\n            dataIndex: 'arguments'\r\n        },\r\n        {\r\n            title: '说明',\r\n            dataIndex: 'brief'\r\n        },\r\n        {\r\n            title: '类型',\r\n            dataIndex: 'type'\r\n        },\r\n        {\r\n            title: '默认值',\r\n            dataIndex: 'default',\r\n        }\r\n    ];\r\n    const api = \r\n        <div>\r\n            <h2>Select 参数</h2>\r\n            <Table data={data} columns={columns} />\r\n            <h2>Option 参数</h2>\r\n            <Table data={data2} columns={columns} />\r\n        </div>\r\n      \r\n      \r\n    const document:Iprops = {\r\n        brief:brief,\r\n        content:items,\r\n        api:api\r\n    }\r\n    return (<Document document={document}/>)\r\n}\r\nexport default RadioPage","F:\\react\\ts-react\\src\\components\\Checkbox\\index.tsx",["419","420","421","422","423","424"],"import React,{useEffect, useState, useRef} from 'react';\r\nimport classNames from 'classnames';\r\ninterface ICheckbox{\r\n    checked?:boolean;\r\n    defaultChecked?:boolean;\r\n    disabled?:boolean;\r\n    indeterminate?:boolean;\r\n    onChange?:any;\r\n    children?:any;\r\n    Group?:any;\r\n}\r\ninterface Option{\r\n    value?:string;\r\n    label?:string;\r\n    disabled?:boolean;\r\n}\r\ninterface ICheckboxGroup{\r\n    options?:any[];\r\n    defaultValue?:string[];\r\n    value?:string[];\r\n    disabled?:boolean;\r\n\r\n    onChange?:any;\r\n\r\n}\r\nconst Checkbox:React.FC<ICheckbox> = (props:ICheckbox)=>{\r\n    const { onChange=()=>{}, children, checked, defaultChecked=false, disabled=false,indeterminate=false } = props\r\n    const [isChecked,setChecked] = useState(defaultChecked)\r\n    const [isDisabled,setDisabled] = useState(disabled)\r\n    useEffect(()=>{\r\n        if(isDisabled) return ;\r\n        \r\n        if(checked!==undefined){\r\n            setChecked(checked)\r\n        }\r\n    },[checked])\r\n    useEffect(()=>{\r\n        if(disabled!==undefined){\r\n            setDisabled(disabled)\r\n        }\r\n    },[disabled])\r\n    const handleClick = ()=>{\r\n        if(isDisabled) return ;\r\n        setChecked(!isChecked)\r\n        onChange(!isChecked)\r\n    }\r\n    const classes = classNames(\"sxd-checkbox\",{\r\n        \"sxd-checkbox-checked\":isChecked,\r\n        \"sxd-checkbox-disabled\":isDisabled,\r\n        \"sxd-checkbox-indeterminate\":indeterminate,\r\n    })\r\n    const wrapClasses = classNames(\"sxd-checkbox-wrapper\",{\"sxd-checkbox-wrapper-disabled\":isDisabled})\r\n    return (\r\n        <span style={{display:\"inline-block\"}}>\r\n            <span className={wrapClasses} onClick={()=>handleClick()}>\r\n                <span className={classes}>\r\n                    <span className=\"sxd-checkbox-inner\"/>\r\n                </span>\r\n                <span className=\"sxd-checkbox-text\">{children}</span>\r\n            </span>\r\n        </span>\r\n    )\r\n}\r\nconst CheckboxGroup:React.FC<ICheckboxGroup> = (props:any)=>{\r\n    const {options,defaultValue,disabled,onChange=()=>{},value} = props\r\n    //console.log(\"value:\",value)\r\n    const exportvalue=  value || defaultValue || []\r\n    const getChecked = (option:any)=>{\r\n        if (typeof option === 'string') {\r\n            if(exportvalue.indexOf(option)>-1){\r\n                return true\r\n            }\r\n        }else{\r\n            if(exportvalue.indexOf(option.value)>-1){\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    const initData = ()=>{\r\n        if(options && options.length > 0){\r\n            return options.map((option:any) => {\r\n                if (typeof option === 'string') {\r\n                  return {\r\n                    label: option,\r\n                    value: option,\r\n                    checked:getChecked(option),\r\n                    disabled:false\r\n                  };\r\n                }\r\n                return {...option,checked:getChecked(option),disabled:option.disabled||false};\r\n            });\r\n        }\r\n        return []\r\n    }\r\n    const [data,setData] = useState(initData())\r\n    const [click,setClick] = useState(false)\r\n    //setData(initData())\r\n    let flag = useRef(true)\r\n    useEffect(()=>{\r\n        if(flag.current){\r\n            flag.current=false\r\n            return\r\n        }\r\n        setData(initData())\r\n    },[exportvalue])\r\n    useEffect(()=>{\r\n        let v:any = []\r\n        data.map((item:any)=>{\r\n            if(item.checked){\r\n                v.push(item.value)\r\n            }\r\n        })\r\n        onChange(v)\r\n    },[click])\r\n    return data.map((item:any)=>{\r\n        const handleClick = (value:any)=>{\r\n            if(item.disabled) return ;\r\n            setData(data.map((item:any)=>{\r\n                if(value === item.value){\r\n                    return {...item,checked:!item.checked}\r\n                }\r\n                return item\r\n            }))\r\n            setClick(!click)\r\n        }\r\n        const classes = classNames(\"sxd-checkbox\",{\r\n            \"sxd-checkbox-checked\":item.checked,\r\n            \"sxd-checkbox-disabled\":item.disabled,\r\n           \r\n        })\r\n        const wrapClasses = classNames(\"sxd-checkbox-wrapper\",{\"sxd-checkbox-wrapper-disabled\":item.disabled})\r\n        return (\r\n            <span key={item.value} style={{display:\"inline-block\"}}>\r\n                <span className={wrapClasses} onClick={()=>handleClick(item.value)}>\r\n                    <span className={classes}>\r\n                        <span className=\"sxd-checkbox-inner\"/>\r\n                    </span>\r\n                    <span className=\"sxd-checkbox-text\">{item.label}</span>\r\n                </span>\r\n            </span>\r\n        )\r\n    })\r\n    \r\n}\r\n\r\nexport { Checkbox, CheckboxGroup }","F:\\react\\ts-react\\src\\site\\pages\\Table.tsx",["425","426","427","428","429"],"import Document from '../layout/content/Document'\r\nimport React,{useState} from 'react'\r\nimport {IBrief, Icontent, Iprops} from '../interface/document'\r\nimport Button from '../../components/Button/button'\r\nimport {Select,Option} from '../../components/Select'\r\n\r\nimport Icon from '../../components/Icon'\r\nimport Table from '../../components/Table'\r\nconst RadioPage:React.FC = ()=>{\r\n    const brief:IBrief={\r\n        introduce:<>\r\n        <h1>Table 表格</h1>\r\n        <p>展示行列数据。</p>\r\n        <h2>何时使用</h2>\r\n        <div>\r\n            <ul>\r\n                <li>\r\n                    <p>当有大量结构化的数据需要展现时；</p>\r\n                </li>\r\n                <li>\r\n                    <p>当需要对数据进行排序、搜索、分页、自定义操作等复杂行为时。</p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <h2>代码演示</h2>\r\n        </>\r\n    }\r\n    const columns = [\r\n        {\r\n          title: 'Name',\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n        },\r\n        {\r\n          title: 'Age',\r\n          dataIndex: 'age',\r\n          key: 'age',\r\n        },\r\n        {\r\n          title: 'Address',\r\n          dataIndex: 'address',\r\n          key: 'address',\r\n        },\r\n        {\r\n          title: 'Tags',\r\n          key: 'tags',\r\n          dataIndex: 'tags',\r\n        },\r\n      ];\r\n      \r\n      const data = [\r\n        {\r\n          key: '1',\r\n          name: 'John Brown',\r\n          age: 32,\r\n          address: 'New York No. 1 Lake Park',\r\n          tags: ['nice', 'developer'],\r\n        },\r\n        {\r\n          key: '2',\r\n          name: 'Jim Green',\r\n          age: 42,\r\n          address: 'London No. 1 Lake Park',\r\n          tags: ['loser'],\r\n        },\r\n        {\r\n          key: '3',\r\n          name: 'Joe Black',\r\n          age: 32,\r\n          address: 'Sidney No. 1 Lake Park',\r\n          tags: ['cool', 'teacher'],\r\n        },\r\n      ];\r\n    const items:Icontent[]=[\r\n        {\r\n            id:1,\r\n            demo:<div>\r\n                    <Table data={data} columns={columns} />\r\n                </div>,\r\n            title:\"基本使用\",\r\n            description:\"简单的表格\",\r\n            code:\r\n`\r\nimport { Table } from 'sxdui'\r\nconst columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Age',\r\n      dataIndex: 'age',\r\n      key: 'age',\r\n    },\r\n    {\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n    },\r\n    {\r\n      title: 'Tags',\r\n      key: 'tags',\r\n      dataIndex: 'tags',\r\n    },\r\n  ];\r\n  \r\nconst data = [\r\n{\r\n    key: '1',\r\n    name: 'John Brown',\r\n    age: 32,\r\n    address: 'New York No. 1 Lake Park',\r\n    tags: ['nice', 'developer'],\r\n},\r\n{\r\n    key: '2',\r\n    name: 'Jim Green',\r\n    age: 42,\r\n    address: 'London No. 1 Lake Park',\r\n    tags: ['loser'],\r\n},\r\n{\r\n    key: '3',\r\n    name: 'Joe Black',\r\n    age: 32,\r\n    address: 'Sidney No. 1 Lake Park',\r\n    tags: ['cool', 'teacher'],\r\n},\r\n];\r\n<Table data={data} columns={columns} />\r\n`\r\n        },\r\n    ];\r\n\r\n    const data_table=[\r\n        {\r\n          key:1,\r\n          arguments: 'data',\r\n          brief: \"数据数组\",\r\n          type: 'object[]',\r\n          default:\"-\"\r\n        },\r\n        {\r\n          key:2,\r\n          arguments: 'columns',\r\n          brief: \"表格列的配置描述\",\r\n          type: 'ColumnsType[]',\r\n          default:\"-\"\r\n        },\r\n     ];\r\n     const columns_table=[\r\n        {\r\n            title: '参数',\r\n            dataIndex: 'arguments'\r\n        },\r\n        {\r\n            title: '说明',\r\n            dataIndex: 'brief'\r\n        },\r\n        {\r\n            title: '类型',\r\n            dataIndex: 'type'\r\n        },\r\n        {\r\n            title: '默认值',\r\n            dataIndex: 'default',\r\n        }\r\n    ];\r\n    const api = \r\n        <div>\r\n            <h2>Table 参数</h2>\r\n            <Table data={data_table} columns={columns_table} />\r\n        </div>\r\n      \r\n      \r\n    const document:Iprops = {\r\n        brief:brief,\r\n        content:items,\r\n        api:api\r\n    }\r\n    return (<Document document={document}/>)\r\n}\r\nexport default RadioPage","F:\\react\\ts-react2\\src\\index.tsx",["430"],["431","432"],"F:\\react\\ts-react2\\src\\reportWebVitals.ts",[],"F:\\react\\ts-react2\\src\\App.tsx",[],"F:\\react\\ts-react2\\src\\router\\index.js",["433"],"F:\\react\\ts-react2\\src\\store\\index.js",[],["434","435"],"F:\\react\\ts-react2\\src\\store\\route.js",[],"F:\\react\\ts-react2\\src\\store\\screenWidth.js",[],"F:\\react\\ts-react2\\src\\site\\pages\\Index.tsx",["436"],"F:\\react\\ts-react2\\src\\site\\pages\\Button.tsx",[],"F:\\react\\ts-react2\\src\\site\\pages\\Select.tsx",["437","438","439","440","441"],"F:\\react\\ts-react2\\src\\site\\pages\\Input.tsx",[],"F:\\react\\ts-react2\\src\\site\\pages\\Grid.tsx",["442","443","444"],"F:\\react\\ts-react2\\src\\site\\pages\\Icon.tsx",["445","446","447","448","449"],"F:\\react\\ts-react2\\src\\site\\pages\\Divider.tsx",["450","451","452","453","454"],"F:\\react\\ts-react2\\src\\site\\pages\\Checkbox.tsx",["455","456","457","458","459"],"F:\\react\\ts-react2\\src\\site\\pages\\Radio.tsx",["460","461","462","463","464"],"F:\\react\\ts-react2\\src\\site\\pages\\Table.tsx",["465","466","467","468","469"],"F:\\react\\ts-react2\\src\\site\\layout\\index.tsx",["470","471","472","473","474","475"],"F:\\react\\ts-react2\\src\\components\\Button\\button.tsx",["476"],"F:\\react\\ts-react2\\src\\site\\layout\\header.tsx",["477","478"],"F:\\react\\ts-react2\\src\\site\\layout\\footer.tsx",[],"F:\\react\\ts-react2\\src\\site\\layout\\hooks\\useScreenWidth.tsx",["479","480"],"F:\\react\\ts-react2\\src\\components\\Icon\\index.tsx",[],"F:\\react\\ts-react2\\src\\components\\Table\\index.tsx",[],"F:\\react\\ts-react2\\src\\components\\Select\\index.tsx",["481","482","483","484","485","486"],"F:\\react\\ts-react2\\src\\components\\Divider\\index.tsx",["487","488"],"F:\\react\\ts-react2\\src\\components\\Grid\\index.tsx",["489","490"],"F:\\react\\ts-react2\\src\\components\\Input\\index.tsx",["491","492","493","494","495","496"],"F:\\react\\ts-react2\\src\\components\\Checkbox\\index.tsx",["497","498","499","500","501","502"],"F:\\react\\ts-react2\\src\\components\\Grid\\hook.tsx",[],"F:\\react\\ts-react2\\src\\site\\layout\\SiderBar.tsx",[],"F:\\react\\ts-react2\\src\\site\\components\\content\\index.tsx",[],"F:\\react\\ts-react2\\src\\site\\components\\content\\Brief.tsx",[],"F:\\react\\ts-react2\\src\\site\\components\\content\\demoList.tsx",["503","504","505"],"F:\\react\\ts-react2\\src\\site\\components\\content\\Params.tsx",[],"F:\\react\\ts-react2\\src\\site\\components\\content\\demo\\index.tsx",[],"F:\\react\\ts-react2\\src\\site\\components\\content\\demo\\Code.tsx",[],"F:\\react\\ts-react2\\src\\site\\components\\content\\demo\\Introduce.tsx",[],"F:\\react\\ts-react2\\src\\site\\components\\content\\demo\\Preview.tsx",[],"F:\\react\\ts-react2\\src\\site\\layout\\CSST.tsx",["506","507"],{"ruleId":"508","replacedBy":"509"},{"ruleId":"510","replacedBy":"511"},{"ruleId":"512","severity":1,"message":"513","line":10,"column":11,"nodeType":"514","messageId":"515","endLine":10,"endColumn":13},{"ruleId":"512","severity":1,"message":"516","line":4,"column":12,"nodeType":"514","messageId":"515","endLine":4,"endColumn":20},{"ruleId":"512","severity":1,"message":"517","line":9,"column":14,"nodeType":"514","messageId":"515","endLine":9,"endColumn":18},{"ruleId":"518","severity":1,"message":"519","line":15,"column":26,"nodeType":"520","endLine":15,"endColumn":51},{"ruleId":"521","severity":1,"message":"522","line":12,"column":7,"nodeType":"514","endLine":12,"endColumn":11},{"ruleId":"521","severity":1,"message":"523","line":12,"column":7,"nodeType":"514","endLine":12,"endColumn":11,"suggestions":"524"},{"ruleId":"508","replacedBy":"525"},{"ruleId":"510","replacedBy":"526"},{"ruleId":"512","severity":1,"message":"527","line":33,"column":12,"nodeType":"514","messageId":"515","endLine":33,"endColumn":16},{"ruleId":"512","severity":1,"message":"528","line":1,"column":15,"nodeType":"514","messageId":"515","endLine":1,"endColumn":23},{"ruleId":"512","severity":1,"message":"529","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":17},{"ruleId":"512","severity":1,"message":"530","line":17,"column":15,"nodeType":"514","messageId":"515","endLine":17,"endColumn":28},{"ruleId":"521","severity":1,"message":"531","line":33,"column":11,"nodeType":"532","endLine":33,"endColumn":21,"suggestions":"533"},{"ruleId":"512","severity":1,"message":"528","line":1,"column":15,"nodeType":"514","messageId":"515","endLine":1,"endColumn":23},{"ruleId":"512","severity":1,"message":"534","line":1,"column":24,"nodeType":"514","messageId":"515","endLine":1,"endColumn":33},{"ruleId":"535","severity":1,"message":"536","line":20,"column":32,"nodeType":"537","messageId":"538","endLine":20,"endColumn":34},{"ruleId":"539","severity":1,"message":"540","line":8,"column":17,"nodeType":"520","endLine":8,"endColumn":33},{"ruleId":"518","severity":1,"message":"519","line":9,"column":21,"nodeType":"520","endLine":9,"endColumn":59},{"ruleId":"512","severity":1,"message":"528","line":1,"column":15,"nodeType":"514","messageId":"515","endLine":1,"endColumn":23},{"ruleId":"541","severity":1,"message":"542","line":5,"column":8,"nodeType":"514","messageId":"515","endLine":5,"endColumn":13},{"ruleId":"508","replacedBy":"509"},{"ruleId":"510","replacedBy":"511"},{"ruleId":"521","severity":1,"message":"522","line":10,"column":7,"nodeType":"514","endLine":10,"endColumn":11},{"ruleId":"521","severity":1,"message":"543","line":10,"column":7,"nodeType":"514","endLine":10,"endColumn":11,"suggestions":"544"},{"ruleId":"512","severity":1,"message":"545","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":14},{"ruleId":"512","severity":1,"message":"546","line":7,"column":8,"nodeType":"514","messageId":"515","endLine":7,"endColumn":12},{"ruleId":"512","severity":1,"message":"547","line":28,"column":12,"nodeType":"514","messageId":"515","endLine":28,"endColumn":19},{"ruleId":"512","severity":1,"message":"548","line":28,"column":20,"nodeType":"514","messageId":"515","endLine":28,"endColumn":30},{"ruleId":"512","severity":1,"message":"549","line":29,"column":11,"nodeType":"514","messageId":"515","endLine":29,"endColumn":22},{"ruleId":"512","severity":1,"message":"550","line":70,"column":12,"nodeType":"514","messageId":"515","endLine":70,"endColumn":22},{"ruleId":"512","severity":1,"message":"551","line":70,"column":23,"nodeType":"514","messageId":"515","endLine":70,"endColumn":36},{"ruleId":"552","severity":1,"message":"553","line":102,"column":48,"nodeType":"554","messageId":"555","endLine":102,"endColumn":50},{"ruleId":"552","severity":1,"message":"553","line":107,"column":48,"nodeType":"554","messageId":"555","endLine":107,"endColumn":50},{"ruleId":"521","severity":1,"message":"556","line":112,"column":7,"nodeType":"532","endLine":112,"endColumn":21,"suggestions":"557"},{"ruleId":"558","severity":1,"message":"559","line":209,"column":29,"nodeType":"560","messageId":"561","endLine":209,"endColumn":47},{"ruleId":"512","severity":1,"message":"534","line":1,"column":25,"nodeType":"514","messageId":"515","endLine":1,"endColumn":34},{"ruleId":"512","severity":1,"message":"562","line":4,"column":9,"nodeType":"514","messageId":"515","endLine":4,"endColumn":15},{"ruleId":"512","severity":1,"message":"563","line":5,"column":10,"nodeType":"514","messageId":"515","endLine":5,"endColumn":15},{"ruleId":"512","severity":1,"message":"564","line":23,"column":58,"nodeType":"514","messageId":"515","endLine":23,"endColumn":70},{"ruleId":"565","severity":1,"message":"566","line":39,"column":9,"nodeType":"567","messageId":"568","endLine":39,"endColumn":41,"fix":"569"},{"ruleId":"512","severity":1,"message":"570","line":122,"column":29,"nodeType":"514","messageId":"515","endLine":122,"endColumn":34},{"ruleId":"512","severity":1,"message":"528","line":2,"column":15,"nodeType":"514","messageId":"515","endLine":2,"endColumn":23},{"ruleId":"512","severity":1,"message":"545","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":14},{"ruleId":"512","severity":1,"message":"571","line":6,"column":8,"nodeType":"514","messageId":"515","endLine":6,"endColumn":13},{"ruleId":"512","severity":1,"message":"572","line":39,"column":11,"nodeType":"514","messageId":"515","endLine":39,"endColumn":15},{"ruleId":"512","severity":1,"message":"573","line":84,"column":12,"nodeType":"514","messageId":"515","endLine":84,"endColumn":19},{"ruleId":"512","severity":1,"message":"528","line":2,"column":15,"nodeType":"514","messageId":"515","endLine":2,"endColumn":23},{"ruleId":"512","severity":1,"message":"545","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":14},{"ruleId":"512","severity":1,"message":"546","line":5,"column":8,"nodeType":"514","messageId":"515","endLine":5,"endColumn":12},{"ruleId":"512","severity":1,"message":"574","line":4,"column":9,"nodeType":"514","messageId":"515","endLine":4,"endColumn":21},{"ruleId":"521","severity":1,"message":"575","line":58,"column":7,"nodeType":"532","endLine":58,"endColumn":20,"suggestions":"576"},{"ruleId":"512","severity":1,"message":"534","line":1,"column":15,"nodeType":"514","messageId":"515","endLine":1,"endColumn":24},{"ruleId":"512","severity":1,"message":"528","line":1,"column":26,"nodeType":"514","messageId":"515","endLine":1,"endColumn":34},{"ruleId":"512","severity":1,"message":"528","line":2,"column":15,"nodeType":"514","messageId":"515","endLine":2,"endColumn":23},{"ruleId":"512","severity":1,"message":"545","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":14},{"ruleId":"512","severity":1,"message":"546","line":5,"column":8,"nodeType":"514","messageId":"515","endLine":5,"endColumn":12},{"ruleId":"512","severity":1,"message":"577","line":8,"column":9,"nodeType":"514","messageId":"515","endLine":8,"endColumn":12},{"ruleId":"512","severity":1,"message":"578","line":8,"column":13,"nodeType":"514","messageId":"515","endLine":8,"endColumn":16},{"ruleId":"512","severity":1,"message":"562","line":5,"column":9,"nodeType":"514","messageId":"515","endLine":5,"endColumn":15},{"ruleId":"512","severity":1,"message":"579","line":5,"column":16,"nodeType":"514","messageId":"515","endLine":5,"endColumn":22},{"ruleId":"512","severity":1,"message":"546","line":7,"column":8,"nodeType":"514","messageId":"515","endLine":7,"endColumn":12},{"ruleId":"512","severity":1,"message":"580","line":30,"column":12,"nodeType":"514","messageId":"515","endLine":30,"endColumn":20},{"ruleId":"512","severity":1,"message":"581","line":30,"column":21,"nodeType":"514","messageId":"515","endLine":30,"endColumn":32},{"ruleId":"512","severity":1,"message":"545","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":14},{"ruleId":"512","severity":1,"message":"546","line":7,"column":8,"nodeType":"514","messageId":"515","endLine":7,"endColumn":12},{"ruleId":"512","severity":1,"message":"547","line":28,"column":12,"nodeType":"514","messageId":"515","endLine":28,"endColumn":19},{"ruleId":"512","severity":1,"message":"548","line":28,"column":20,"nodeType":"514","messageId":"515","endLine":28,"endColumn":30},{"ruleId":"512","severity":1,"message":"549","line":29,"column":11,"nodeType":"514","messageId":"515","endLine":29,"endColumn":22},{"ruleId":"512","severity":1,"message":"579","line":12,"column":11,"nodeType":"514","messageId":"515","endLine":12,"endColumn":17},{"ruleId":"521","severity":1,"message":"582","line":36,"column":7,"nodeType":"532","endLine":36,"endColumn":16,"suggestions":"583"},{"ruleId":"512","severity":1,"message":"584","line":65,"column":33,"nodeType":"514","messageId":"515","endLine":65,"endColumn":41},{"ruleId":"521","severity":1,"message":"585","line":106,"column":7,"nodeType":"532","endLine":106,"endColumn":20,"suggestions":"586"},{"ruleId":"552","severity":1,"message":"553","line":109,"column":28,"nodeType":"554","messageId":"555","endLine":109,"endColumn":30},{"ruleId":"521","severity":1,"message":"587","line":115,"column":7,"nodeType":"532","endLine":115,"endColumn":14,"suggestions":"588"},{"ruleId":"512","severity":1,"message":"528","line":2,"column":15,"nodeType":"514","messageId":"515","endLine":2,"endColumn":23},{"ruleId":"512","severity":1,"message":"545","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":14},{"ruleId":"512","severity":1,"message":"562","line":5,"column":9,"nodeType":"514","messageId":"515","endLine":5,"endColumn":15},{"ruleId":"512","severity":1,"message":"579","line":5,"column":16,"nodeType":"514","messageId":"515","endLine":5,"endColumn":22},{"ruleId":"512","severity":1,"message":"546","line":7,"column":8,"nodeType":"514","messageId":"515","endLine":7,"endColumn":12},{"ruleId":"512","severity":1,"message":"513","line":10,"column":11,"nodeType":"514","messageId":"515","endLine":10,"endColumn":13},{"ruleId":"508","replacedBy":"589"},{"ruleId":"510","replacedBy":"590"},{"ruleId":"541","severity":1,"message":"542","line":5,"column":8,"nodeType":"514","messageId":"515","endLine":5,"endColumn":13},{"ruleId":"508","replacedBy":"589"},{"ruleId":"510","replacedBy":"590"},{"ruleId":"512","severity":1,"message":"528","line":1,"column":15,"nodeType":"514","messageId":"515","endLine":1,"endColumn":23},{"ruleId":"512","severity":1,"message":"545","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":14},{"ruleId":"512","severity":1,"message":"546","line":7,"column":8,"nodeType":"514","messageId":"515","endLine":7,"endColumn":12},{"ruleId":"512","severity":1,"message":"547","line":28,"column":12,"nodeType":"514","messageId":"515","endLine":28,"endColumn":19},{"ruleId":"512","severity":1,"message":"548","line":28,"column":20,"nodeType":"514","messageId":"515","endLine":28,"endColumn":30},{"ruleId":"512","severity":1,"message":"549","line":29,"column":11,"nodeType":"514","messageId":"515","endLine":29,"endColumn":22},{"ruleId":"512","severity":1,"message":"528","line":2,"column":15,"nodeType":"514","messageId":"515","endLine":2,"endColumn":23},{"ruleId":"512","severity":1,"message":"545","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":14},{"ruleId":"512","severity":1,"message":"546","line":5,"column":8,"nodeType":"514","messageId":"515","endLine":5,"endColumn":12},{"ruleId":"512","severity":1,"message":"528","line":2,"column":15,"nodeType":"514","messageId":"515","endLine":2,"endColumn":23},{"ruleId":"512","severity":1,"message":"545","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":14},{"ruleId":"512","severity":1,"message":"571","line":6,"column":8,"nodeType":"514","messageId":"515","endLine":6,"endColumn":13},{"ruleId":"512","severity":1,"message":"572","line":39,"column":11,"nodeType":"514","messageId":"515","endLine":39,"endColumn":15},{"ruleId":"512","severity":1,"message":"573","line":84,"column":12,"nodeType":"514","messageId":"515","endLine":84,"endColumn":19},{"ruleId":"512","severity":1,"message":"528","line":2,"column":15,"nodeType":"514","messageId":"515","endLine":2,"endColumn":23},{"ruleId":"512","severity":1,"message":"545","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":14},{"ruleId":"512","severity":1,"message":"546","line":5,"column":8,"nodeType":"514","messageId":"515","endLine":5,"endColumn":12},{"ruleId":"512","severity":1,"message":"577","line":8,"column":9,"nodeType":"514","messageId":"515","endLine":8,"endColumn":12},{"ruleId":"512","severity":1,"message":"578","line":8,"column":13,"nodeType":"514","messageId":"515","endLine":8,"endColumn":16},{"ruleId":"512","severity":1,"message":"562","line":5,"column":9,"nodeType":"514","messageId":"515","endLine":5,"endColumn":15},{"ruleId":"512","severity":1,"message":"579","line":5,"column":16,"nodeType":"514","messageId":"515","endLine":5,"endColumn":22},{"ruleId":"512","severity":1,"message":"546","line":7,"column":8,"nodeType":"514","messageId":"515","endLine":7,"endColumn":12},{"ruleId":"512","severity":1,"message":"580","line":30,"column":12,"nodeType":"514","messageId":"515","endLine":30,"endColumn":20},{"ruleId":"512","severity":1,"message":"581","line":30,"column":21,"nodeType":"514","messageId":"515","endLine":30,"endColumn":32},{"ruleId":"512","severity":1,"message":"545","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":14},{"ruleId":"512","severity":1,"message":"546","line":7,"column":8,"nodeType":"514","messageId":"515","endLine":7,"endColumn":12},{"ruleId":"512","severity":1,"message":"547","line":28,"column":12,"nodeType":"514","messageId":"515","endLine":28,"endColumn":19},{"ruleId":"512","severity":1,"message":"548","line":28,"column":20,"nodeType":"514","messageId":"515","endLine":28,"endColumn":30},{"ruleId":"512","severity":1,"message":"549","line":29,"column":11,"nodeType":"514","messageId":"515","endLine":29,"endColumn":22},{"ruleId":"512","severity":1,"message":"528","line":2,"column":15,"nodeType":"514","messageId":"515","endLine":2,"endColumn":23},{"ruleId":"512","severity":1,"message":"545","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":14},{"ruleId":"512","severity":1,"message":"562","line":5,"column":9,"nodeType":"514","messageId":"515","endLine":5,"endColumn":15},{"ruleId":"512","severity":1,"message":"579","line":5,"column":16,"nodeType":"514","messageId":"515","endLine":5,"endColumn":22},{"ruleId":"512","severity":1,"message":"546","line":7,"column":8,"nodeType":"514","messageId":"515","endLine":7,"endColumn":12},{"ruleId":"512","severity":1,"message":"528","line":1,"column":15,"nodeType":"514","messageId":"515","endLine":1,"endColumn":23},{"ruleId":"512","severity":1,"message":"591","line":2,"column":10,"nodeType":"514","messageId":"515","endLine":2,"endColumn":23},{"ruleId":"512","severity":1,"message":"529","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":17},{"ruleId":"512","severity":1,"message":"592","line":9,"column":9,"nodeType":"514","messageId":"515","endLine":9,"endColumn":19},{"ruleId":"512","severity":1,"message":"593","line":14,"column":9,"nodeType":"514","messageId":"515","endLine":14,"endColumn":17},{"ruleId":"521","severity":1,"message":"531","line":31,"column":11,"nodeType":"532","endLine":31,"endColumn":21,"suggestions":"594"},{"ruleId":"512","severity":1,"message":"527","line":33,"column":12,"nodeType":"514","messageId":"515","endLine":33,"endColumn":16},{"ruleId":"539","severity":1,"message":"540","line":8,"column":17,"nodeType":"520","endLine":8,"endColumn":33},{"ruleId":"518","severity":1,"message":"519","line":9,"column":21,"nodeType":"520","endLine":9,"endColumn":59},{"ruleId":"521","severity":1,"message":"522","line":10,"column":7,"nodeType":"514","endLine":10,"endColumn":11},{"ruleId":"521","severity":1,"message":"543","line":10,"column":7,"nodeType":"514","endLine":10,"endColumn":11,"suggestions":"595"},{"ruleId":"512","severity":1,"message":"550","line":70,"column":12,"nodeType":"514","messageId":"515","endLine":70,"endColumn":22},{"ruleId":"512","severity":1,"message":"551","line":70,"column":23,"nodeType":"514","messageId":"515","endLine":70,"endColumn":36},{"ruleId":"552","severity":1,"message":"553","line":102,"column":48,"nodeType":"554","messageId":"555","endLine":102,"endColumn":50},{"ruleId":"552","severity":1,"message":"553","line":107,"column":48,"nodeType":"554","messageId":"555","endLine":107,"endColumn":50},{"ruleId":"521","severity":1,"message":"556","line":112,"column":7,"nodeType":"532","endLine":112,"endColumn":21,"suggestions":"596"},{"ruleId":"558","severity":1,"message":"559","line":209,"column":29,"nodeType":"560","messageId":"561","endLine":209,"endColumn":47},{"ruleId":"512","severity":1,"message":"534","line":1,"column":15,"nodeType":"514","messageId":"515","endLine":1,"endColumn":24},{"ruleId":"512","severity":1,"message":"528","line":1,"column":26,"nodeType":"514","messageId":"515","endLine":1,"endColumn":34},{"ruleId":"512","severity":1,"message":"574","line":4,"column":9,"nodeType":"514","messageId":"515","endLine":4,"endColumn":21},{"ruleId":"521","severity":1,"message":"575","line":58,"column":7,"nodeType":"532","endLine":58,"endColumn":20,"suggestions":"597"},{"ruleId":"512","severity":1,"message":"534","line":1,"column":25,"nodeType":"514","messageId":"515","endLine":1,"endColumn":34},{"ruleId":"512","severity":1,"message":"562","line":4,"column":9,"nodeType":"514","messageId":"515","endLine":4,"endColumn":15},{"ruleId":"512","severity":1,"message":"563","line":5,"column":10,"nodeType":"514","messageId":"515","endLine":5,"endColumn":15},{"ruleId":"512","severity":1,"message":"564","line":23,"column":58,"nodeType":"514","messageId":"515","endLine":23,"endColumn":70},{"ruleId":"565","severity":1,"message":"566","line":39,"column":9,"nodeType":"567","messageId":"568","endLine":39,"endColumn":41,"fix":"598"},{"ruleId":"512","severity":1,"message":"570","line":122,"column":29,"nodeType":"514","messageId":"515","endLine":122,"endColumn":34},{"ruleId":"512","severity":1,"message":"579","line":12,"column":11,"nodeType":"514","messageId":"515","endLine":12,"endColumn":17},{"ruleId":"521","severity":1,"message":"582","line":36,"column":7,"nodeType":"532","endLine":36,"endColumn":16,"suggestions":"599"},{"ruleId":"512","severity":1,"message":"584","line":65,"column":33,"nodeType":"514","messageId":"515","endLine":65,"endColumn":41},{"ruleId":"521","severity":1,"message":"585","line":106,"column":7,"nodeType":"532","endLine":106,"endColumn":20,"suggestions":"600"},{"ruleId":"552","severity":1,"message":"553","line":109,"column":28,"nodeType":"554","messageId":"555","endLine":109,"endColumn":30},{"ruleId":"521","severity":1,"message":"587","line":115,"column":7,"nodeType":"532","endLine":115,"endColumn":14,"suggestions":"601"},{"ruleId":"512","severity":1,"message":"528","line":1,"column":15,"nodeType":"514","messageId":"515","endLine":1,"endColumn":23},{"ruleId":"512","severity":1,"message":"534","line":1,"column":24,"nodeType":"514","messageId":"515","endLine":1,"endColumn":33},{"ruleId":"535","severity":1,"message":"536","line":20,"column":32,"nodeType":"537","messageId":"538","endLine":20,"endColumn":34},{"ruleId":"512","severity":1,"message":"528","line":1,"column":15,"nodeType":"514","messageId":"515","endLine":1,"endColumn":23},{"ruleId":"521","severity":1,"message":"531","line":19,"column":7,"nodeType":"532","endLine":19,"endColumn":17,"suggestions":"602"},"no-native-reassign",["603"],"no-negated-in-lhs",["604"],"@typescript-eslint/no-unused-vars","'Ir' is defined but never used.","Identifier","unusedVar","'inputVal' is assigned a value but never used.","'test' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["605"],["603"],["604"],"'rest' is assigned a value but never used.","'useState' is defined but never used.","'routeInfo' is defined but never used.","'Active' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'changeToAny'. Either include it or remove the dependency array.","ArrayExpression",["606"],"'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'Index' is defined but never used.","React Hook useEffect has a missing dependency: 'width'. Either include it or remove the dependency array.",["607"],"'Button' is defined but never used.","'Icon' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'valueChange' is assigned a value but never used.","'iconRotate' is assigned a value but never used.","'setIconRotate' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'mode' and 'onChange'. Either include them or remove the dependency array.",["608"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Select' is defined but never used.","'clear' is defined but never used.","'defaultValue' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"sxd-input-wrap-focus\"] found.","Property","unnecessarilyComputedProperty",{"range":"609","text":"610"},"'style' is assigned a value but never used.","'Table' is defined but never used.","'data' is assigned a value but never used.","'columns' is assigned a value but never used.","'ThemeContext' is defined but never used.","React Hook useEffect has missing dependencies: 'addListener', 'gridData', and 'gutter'. Either include them or remove the dependency array. You can also do a functional update 'setGridData(g => ...)' if you only need 'gridData' in the 'setGridData' call.",["611"],"'Row' is defined but never used.","'Col' is defined but never used.","'Option' is defined but never used.","'checked2' is assigned a value but never used.","'setChecked2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isDisabled'. Either include it or remove the dependency array.",["612"],"'disabled' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initData'. Either include it or remove the dependency array.",["613"],"React Hook useEffect has missing dependencies: 'data' and 'onChange'. Either include them or remove the dependency array.",["614"],["603"],["604"],"'CSSTransition' is defined but never used.","'ISiteProps' is defined but never used.","'location' is assigned a value but never used.",["615"],["616"],["617"],["618"],{"range":"619","text":"610"},["620"],["621"],["622"],["623"],"no-global-assign","no-unsafe-negation",{"desc":"624","fix":"625"},{"desc":"626","fix":"627"},{"desc":"628","fix":"629"},{"desc":"630","fix":"631"},[1268,1292],"\"sxd-input-wrap-focus\"",{"desc":"632","fix":"633"},{"desc":"634","fix":"635"},{"desc":"636","fix":"637"},{"desc":"638","fix":"639"},{"desc":"626","fix":"640"},{"desc":"628","fix":"641"},{"desc":"630","fix":"642"},{"desc":"632","fix":"643"},[1268,1292],{"desc":"634","fix":"644"},{"desc":"636","fix":"645"},{"desc":"638","fix":"646"},{"desc":"647","fix":"648"},"Update the dependencies array to be: [url]",{"range":"649","text":"650"},"Update the dependencies array to be: [changeToAny, children]",{"range":"651","text":"652"},"Update the dependencies array to be: [width]",{"range":"653","text":"654"},"Update the dependencies array to be: [mode, onChange, selectedInfo]",{"range":"655","text":"656"},"Update the dependencies array to be: [addListener, gridData, gutter, offsetWidth]",{"range":"657","text":"658"},"Update the dependencies array to be: [checked, isDisabled]",{"range":"659","text":"660"},"Update the dependencies array to be: [exportvalue, initData]",{"range":"661","text":"662"},"Update the dependencies array to be: [click, data, onChange]",{"range":"663","text":"664"},{"range":"665","text":"652"},{"range":"666","text":"654"},{"range":"667","text":"656"},{"range":"668","text":"658"},{"range":"669","text":"660"},{"range":"670","text":"662"},{"range":"671","text":"664"},"Update the dependencies array to be: [changeToAny, location]",{"range":"672","text":"673"},[379,383],"[url]",[1251,1261],"[changeToAny, children]",[395,399],"[width]",[3215,3229],"[mode, onChange, selectedInfo]",[1946,1959],"[addListener, gridData, gutter, offsetWidth]",[961,970],"[checked, isDisabled]",[3314,3327],"[exportvalue, initData]",[3528,3535],"[click, data, onChange]",[1092,1102],[395,399],[3215,3229],[1946,1959],[961,970],[3314,3327],[3528,3535],[552,562],"[changeToAny, location]"]